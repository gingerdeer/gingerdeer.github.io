var store = [{
        "title": "Screepbot 101",
        "excerpt":"This post is an overview of my first bot for the strategy game Screeps (https://screeps.com/). The code is built on the initial example code given in the tutorial of the game, and inherits its project structure from there. I plan on writing my next bot from scratch with possibly different structure and semantics, and more of an emphasis on automated tactics. Screeps is a multiplayer strategy game with a slight twist: the players write javascript code to control their units (called creeps) and structures instead of performing it themselves. The other standard strategy game features are there, including: combat between units of different players, different kinds of units that can be spawned, and resource management to keep a players’ bases running. I heard of the game through a friend and decided to have try, since it sounded interesting. The AI is based on the concept of roles given to the creeps, with each creep spawning with a memory slot containing their role. Creep thought process: “I am born. My memory slot says I’m ‘harvester’. I will look up what the code says ‘harvester’ should do in this situation. Then do that.” Some amount of flexibility is built into this system, with some creeps being able to switch roles on the fly. [. . .] -  \"harvester-basic\": {    \"costs\": 300,    \"parts\": [WORK,CARRY,CARRY,MOVE,MOVE],    \"role\": 'harvester',    \"memory\": {      \"creep_type\": \"harvester-basic\",      \"role\": \"harvester\"    }Creeps are spawned by specifying quotas per each power level. For example, a level one spawn creates the basic creeps it can afford to with an emphasis on harvesters.Buildings are not automated and are required to be placed by the player. [. . .] -  \"rc1\" : {    \"quota\" :{       \"upgrader-basic\": 3,       \"builder-basic\": 3,       \"harvester-basic\": 3     } Similarly, offense is performed manually by specifying a target. To attack a target, I would increase the quotas for offensive troops, then once I had enough, would tell them to march towards a target. Each spawn strives to have a few guard creeps on patrol at all times, and when there are too many guards on a square, they spread out into neighboring squares.         if (hostilesInSight.length &gt; 0) {          var target = creep.pos.findClosestByPath(hostilesInSight);          roleAll.attackToward(creep,target);          return;        }A smarter bot could automatically scout nearby areas and calculate whether it would be valuable to perform offensive actions. Memory.offensiveTarget = 'E35N35'; I made the bots quite verbose with the built-in speech bubble functionality. I find it fun to look at the creeps going around their business with each saying what they’re doing. There are also less serious comments such as the bots going “ow!” when hit. Makes the simple rule-based AI seem much more human, too. None of the more advanced parts of the game, such as minerals and the market, are included, and the code was written before the introduction of power creeps. All in all, writing it was a fun exercise. Should I find the time and motivation to get back to Screeps, I hope to be able to approach these other parts of the game and go a bit further than this simple bot. But that is a whole other story. The story of …SCREEPBOT102          if(Math.random() &lt; 0.3) {          creep.say('party!');           }        if(Math.random() &lt; 0.3) {          creep.say('woop woop!');           }The code for this bot is available at:https://github.com/gingerdeer/screepbot101It is full of spaghetti, comment toggles, and unexplored loose strings. I was able to reach control level 9 with this code, though I stopped playing actively at around level 7. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/code/2019-04-13-screeps/"
      },{
        "title": "Ode to Emacs",
        "excerpt":"As a fan of Lisp, I once took the time to learn the basics of the Emacs text editor. This is an overview of my configuration for it. Emacs is just the best, I use it for most of my text editing work and for coding. The best thing about it is that it is mostly a platform that you can always tailor to your current usage needs. It can literally be programmed to be your mail client or as a music player.I’m no expert myself, and my own .emacs -configuration file is very short and simple, without any fancy tricks. I’ve still found it quite suitable for most of my needs so far.  Features include:   downloading of preferred packages at startup, which is always great for new installations.  a few usability key-binds  visual image: togglable transparency and a changing color theme  ido-mode for directory traversal  some language specific commands, some of which are for windows only, such that I only keep uncommented those relevant to my current system  nyancat in the year 2019        ;; Packages I always want to have(setq package-list '(ein                     color-theme\t\t     cyberpunk-theme\t\t     markdown-mode\t\t     ;;ido-ubiquitous\t\t     json-reformat\t\t     rainbow-mode\t\t     ;;magit\t\t     nyan-mode\t\t     monokai-theme\t\t     reykjavik-theme\t\t     haskell-mode));; melpa(require 'package) ;; You might already have this line(add-to-list 'package-archives             '(\"melpa\" . \"https://melpa.org/packages/\"))(when (&lt; emacs-major-version 24)  ;; For important compatibility libraries like cl-lib  (add-to-list 'package-archives '(\"gnu\" . \"http://elpa.gnu.org/packages/\")))(package-initialize) ;; You might already have this line;; ORG(require 'org)(define-key global-map \"\\C-cl\" 'org-store-link)(define-key global-map \"\\C-ca\" 'org-agenda)(setq org-log-done t)(setq org-agenda-files (list \"~/org/personal.org\"));; Download packages that aren't installed(unless package-archive-contents  (package-refresh-contents))(dolist (package package-list)  (unless (package-installed-p package)    (message \"Hey, it seems you're missing some packages. gonna download them for you now.\")    (package-install package)));; nice to have imo(global-linum-mode t);; So much ido(ido-mode 1)(ido-everywhere 1);; Custom key bindings(global-set-key (kbd \"C-x C-m\") 'compile);; ipython;; (require 'ein);; fuck tabs(setq-default indent-tabs-mode nil);; hehe(nyan-mode t);; ipython((setq python-shell-interpreter \"ipython\"      python-shell-interpreter-args \"-i\")(setq-default py-shell-name \"ipython\")(setq-default py-which-bufname \"IPython\")\t\t\t\t\t; use the wx backend, for both mayavi and matplotlib(setq py-python-command-args      '(\"--gui=wx\" \"--pylab=wx\" \"-colors\" \"Linux\"))(setq py-force-py-shell-name-p t);; haskell mode compile(eval-after-load \"haskell-mode\"  '(define-key haskell-mode-map (kbd \"C-c C-c\") 'haskell-compile));; \"colors\"(require 'color-theme)(setq my-color-themes (list 'color-theme-billw 'color-theme-jsc-dark                             'color-theme-sitaramv-solaris 'color-theme-resolve                            'color-theme-classic 'color-theme-jonadabian-slate                            'color-theme-kingsajz 'color-theme-shaman                            'color-theme-subtle-blue 'color-theme-snowish                            'color-theme-sitaramv-nt 'color-theme-wheat))(color-theme-initialize)(defun random-color-theme ()  (interactive)  (random t)  (funcall (car (nth (random (length color-themes)) color-themes))));;(random-color-theme);;(run-with-timer 1 (* 60 60) 'random-color-theme)(global-set-key (kbd \"C-c +\") 'random-color-theme);; switch to prev window(defun prev-window ()   (interactive)   (other-window -1)) (define-key global-map (kbd \"C-x p\") 'prev-window);; (load (expand-file-name \"~/quicklisp/slime-helper.el\"));;(setq inferior-lisp-program \"sbcl\");;(add-to-list 'load-path \"C:/slime-2.22\");;(require 'slime);;(slime-setup);; spotify (?)(defun pl-transparency (value)  \"Set the transparency of the frame window.Argument VALUE 0 is transparent, 100 is opaque.\"  (interactive \"nTransparency Value (0 - 100): \")  (set-frame-parameter (selected-frame) 'alpha value))(pl-transparency 75)(menu-bar-mode -1)(define-key global-map (kbd \"C-c C-o -\") (lambda () (interactive) (pl-transparency 75)))(define-key global-map (kbd \"C-c C-o +\") (lambda () (interactive) (pl-transparency 100)))I keep a more or less up to date version of this configuration at:https://github.com/gingerdeer/dotemacs ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/code/2019-07-04-ode-to-emacs/"
      },{
        "title": "A teenager's first video game",
        "excerpt":"Tämä on tarina ensimmäisestä koskaan kirjoittamastani pelistä. Kirjoitin sen yhdeksännen luokan tietotekniikan valinnaista kurssia varten. Se on roguelike-tyyppinen luolaseikkailu, jossa tehtävänä on päästä niin syvälle kuin mahdollista. Sitä ohjataan numero- tai nuolinäppäimillä, ja siinä on yksinkertainen random map -generaatioalgoritmi. Peli ei sisällä taistelua, mutta pelaajan on mahdollista kuolla nälkään. Tai ansaan.  GILFs on luonnollisesti akronyyminen lyhenne sanoista \"Ganjatripin Intensiivinen Loppuhuipentuma Frotteristin silmin\", kuten lukija todennäköisesti jo päättelikin. Jos pervo mielikuvituksesi kuitenkin viittasi johonkin muuhun mahdolliseen merkitykseen, olet tervetullut täyttämään perversiosi jollain muulla sivustolla.Roguelike-genreen päädyin, sillä niiden toteuttaminen ei vaadi graafista silmää taikka vaivaa, eikä myöskään fysiikkamallinnusta tai muita hankaluuksia, joita graafisiin peleihin liittyy. Harrastin myös joitakin roguelike-pelejä kirjoittamisen aikoihin.Aikomukseni oli alunperin myös säveltää peliin yksinkertaista MIDI-musiikkia taustalle, sillä harrastin MIDI:ä ja pelimusiikkia niihin aikoihin. Aika kuitenkin loppui kesken, ja muistaakseni minulla oli myös jotain ongelmia äänentoiston kanssa, en tosin muista tarkalleen. Eräässä koodiversiossani kuitenkin näkyy viitteitä muutamiin MIDI-tiedostoihin, jotka lienevät jo kadonneet.Kyseinen kirjoitelma on saatavilla eri kielillä!1!!1:    This writeup concerns the first game I ever wrote. It is written in CoolBasic, a dialect of the Basic languages. I wrote it in the ninth grade as part of a computer class final project. Being interested in roguelikes like NetHack, Sil, and Legerdemain at the time, I chose to write a simple roguelike game. It is controlled by arrow and number keys. It includes a very rudimentary map generation algorithm. There is no combat, but a player can die of hunger. Or traps.   GILFs stands for \"Ganjatripin Intensiivinen Loppuhuipentuma Frotteristin silmin\", which roughly translates to \"The ultimate climax of a ganja trip, as seen through the eyes of a frotter\". This particular text is available in multiple languages!1!!1 (though the game is in Finnish :)):  Ez a kis szöveg a GILFs-videojátékomról mesél, az első általam írt játek. Iskolában voltam, a kilencedik osztályban, és egy kurzusba kellett írnunk valamit CoolBasic-cal. A játék egy roguelike-tipus játék, amiben a játékos egy barlangban kutat. Nincs szörny vagy küzdelem, de a játékos meg lehet halni éhségből vagy csapdából. Nyílgombokkal vagy számgombokkal lehet játszani. Egy nagyon egyszerű algoritmus van a barlang alkotnire. A szöveg néhány nyelven olvasható!1!!1 (de finnül a játék :)):   fi    en   hu       Screenshots  Screenshotok   Pelin alkunäkymä  Humble beginnings.  A kezdet   Kuvakaappauksia  \"You find yourself in a dark cave holding a torch in your hand. You see stairs leading upwards near you, but for some reason feel compelled to travel further into the darkness.\" \"Magadat találtál egy sötet barlangban, egy fáklya a kezedben. Lépcsők láttál előled, de érzel azt, hogy előre szerettél a sötétbe utazni. \"      Perinteinen roguelike.  As generic as roguelike can get. Generikus roguelike   Pakeneminen ei ole vaihtoehto.  \"You emerge from the cave to find yourself in a world annihilated by a nuclear holocaust. A pack of zombies charges and eats you.\" \"Felbukkantál a barlangból, és találtál magadat egy nukleárisan megsemmisült világban. Egy zombicsomag támad és megeszik téged.\"    Jälkikäteen mietittynä, luolangeneroimisalgoritmi tuottaa yllättävän hyviä luolastoja. Algoritmi ei ole sinänsä \"korrekti\" tai mitenkään hieno, sillä se sallii umpikujien ja mahdottomien tasojen luomisen. Nämä ovat kuitenkin verrattain harvinaisia. Tasossa on muistaakseni vakio peruskäytävästö, ja huoneiden sijainnit ja koot arvotaan satunnaisesti ympäri kenttää.  Looking back, the rudimentary map-generation algorithm produces quite nice results sometimes. It is based on simply dropping randomly sized rooms randomly around the map while keeping the set of corridors constant, if I remember correctly. It therefore sometimes produces unplayable maps where you cannot reach the end, these were reasonably rare when playing, though.  Visszatekintve, az algoritmus a barlang alkotnire néha szép barlangokat alkot. Nagyon egyszerű, azt alapultam egy kitartó rendszeren folyosóknek, és véletlen helyeztem a szobákot.   Aika kultaa muistot. Isäni on nuorempana työskennellyt ohjelmoinnin parissa ja sain häneltä opastusta kouluajan ulkopuolella vaikeampiin toteutuskohtiin.  Oh, memories Arányos emlékek  Koodi   Code  Teljes program Peli ja sen koodi ovat saatavilla Github-repostani.  Ohjelma koostuu mitä parhaimpien ohjelmointistandardien mukaan valtavasta monoliittisesta main-lohkosta, sekä muutamasta apufunktiosta tämän lisäksi. Kaivellessani tämän arkistoistani, jouduin kertaamaan hieman ja muuttamaan yhtä tai kahta riviä koodista, jotta se toimisi nykynäppäimistöllä. Muuten koodi on alkuperäisessä muodossaan.   Coolbasic-koodin suhteellisen lukukelpoisuuden vuoksi koko koodi alla:  The code for the game and a pre-compiled binary for windows 10 are available at my github.Due to the relative readability of CoolBasic code, all the code for the game is shown below. It follows all the best principles of imperative programming: a huge main-method that does basically everything, and a few helper functions that wouldn't fit in the main. CoolBasic-kód könnyen olvasható. Ezért a teljes programot itt teszem.  Nem szép a kód. Imperatívus programozás stílusában írt van. A main-függvény a legnagyobb részet vesz a kódból, és néhány más kisfüggvény van is.  SCREEN 750,550 system=LoadFont(\"fixedsys\")logo=LoadFont(\"curlz mt\", 28, ON, ON, ON)     Color cbgreen    SetFont system Text 5,0, \"Welcome To\"      Text 5,15, \"Ganjatripin Intensiivinen Loppuhuipentuma\"Text 5,30, \"Frotteristin silmin, or GILFs\"Text 5,45, \"Press any key\" DrawScreen WaitKey Text 5,0, \"Heräät pimeässä luolassa soihtu kädessäsi.\"Text 5,15, \"Näet vieressäsi portaat ylöspäin, mutta jostain syystä tunnet vetoa kulkea edemmäs luolastoon\" DrawScreen WaitKey Text 5,0, \"Käytä liikkumiseen numpadia tai nuolinäppäimiä\"Text 5,15, \"Numpadin - ja + näppäimillä voit liikkua portaita (&lt;,&gt;) ylös ja alas\" DrawScreen WaitKey  'luodaan sisältö- ja näkyvyystaulukotDim Taulukko(67,44,5) As IntegerDim Nakyvyys(67,44,5) As Integer         hp = 25 'pelaajan healthit     '  ixT = 1  Pelaajan x sijainti   ' iyT = 1  Pelaajan y sijainti     ix0 = 30 ' Vasen ylä X    ixX = 40 ' Merkin alkupaikan X    iy0 = 30 ' Vasen ylä Y    iyX = 40 ' Merkin alkupaikan Y        ' Nollataan taulukot    For x=0 To 67      For y=0 To 44        For z=0 To 5            Taulukko(x,y,z) = 1            Nakyvyys(x,y,z) = 0        Next z       Next y    Next x      'luodaan ykköstason sisältöhuonegen (2,2,7,7,10,1) For x=0 To 7   For y=0 To 10      taulukko (x,y,1) = 0   Next yNext x For x=7 To 20   For y=1 To 1      taulukko (x,y,1) = 0   Next yNext x  For x=2 To 13   For y=13 To 13      taulukko (x,y,1) = 0   Next yNext x For x=20 To 20   For y=1 To 9      taulukko (x,y,1) = 0   Next yNext x For x=21 To 30   For y=5 To 5      taulukko (x,y,1) = 0   Next yNext x For x=21 To 36   For y=9 To 9      taulukko (x,y,1) = 0   Next yNext x For x=30 To 30   For y=6 To 8      taulukko (x,y,1) = 0   Next yNext x For x=36 To 36   For y=7 To 8      taulukko (x,y,1) = 0   Next yNext x For x=7 To 7   For y=14 To 25      taulukko (x,y,1) = 0   Next yNext x For x=8 To 50   For y=25 To 25      taulukko (x,y,1) = 0   Next yNext x For x=20 To 20   For y=7 To 25      taulukko (x,y,1) = 0   Next yNext x For x=33 To 33   For y=18 To 24      taulukko (x,y,1) = 0   Next yNext x For x=34 To 45   For y=18 To 18      taulukko (x,y,1) = 0   Next yNext x For x=45 To 57   For y=2 To 16      taulukko (x,y,1) = 0   Next yNext xtaulukko(45,17,1) = 0    ' portaat ykköstasolletaulukko(50,3,1) = 2 ' alastaulukko(2,2,1) = 3 ' ylös 'arvotaan portaiden sijainnit muilla tasoillaa1=Rand(2,60)b1=Rand(2,37)a2=Rand(2,60)b2=Rand(2,37)a3=Rand(2,60)b3=Rand(2,37)a4=Rand(2,50)b4=Rand(2,37) ' Porrashuoneiden kooth1x1=a1-2h1x2=a1+5h1y1=b1-2h1y2=b1+5h2x1=a2-1h2x2=a2+3h2y1=b2h2y2=b2+4h3x1=a3-2h3x2=a3+3h3y1=b3-1h3y2=b3+6h4x1=a4-1h4x2=a4+2h4y1=b4-1h4y2=b4+7 'luodaan huoneet portaiden ympärilleFor x=45 To 52   For y=2 To 4      taulukko (x,y,2) = 0   Next yNext x For x=h1x1 To h1x2   For y=h1y1 To h1y2         taulukko(x,y,2) = 0         taulukko(x,y,3) = 0   Next yNext x For x=h2x1 To h2x2   For y=h2y1 To h2y2      taulukko(x,y,3) = 0      taulukko(x,y,4) = 0   Next yNext x For x=h3x1 To h3x2   For y=h3y1 To h3y2      taulukko (x,y,4) = 0      taulukko (x,y,5) = 0   Next yNext x For x=h4x1 To h4x2   For y=h4y1 To h4y2     taulukko (x,y,5) = 0   Next yNext x   'luodaan huoneet satunnaisesti muille tasoilleFor z = 2 To 5    hl = Rand(10,20)    huonegen (3,3,10,7,hl,z)    ansat (10,z)Next z 'luodaan melko yleispätevä käytäväkompleksi yhdistämään huoneetFor z=2 To 5   For x=5 To 55   taulukko (x,4,z)=0   taulukko (x,30,z)=0   taulukko (x,40,z)=0   Next x     For y=5 To 40   taulukko (7,y,z)=0   taulukko (55,y,z)=0   Next y     For y=4 To 20   taulukko (25,y,z)=0   Next y     For x=20 To 35   taulukko (x,10,z)=0   Next x     For y=7 To 20   taulukko(47,y,z)=0   Next y     For x=47 To 55   taulukko (x,10,z)=0   Next x     For x=40 To 47   taulukko (x,10,z)=0   Next xNext z If a1&lt;55 Then   For  x=a1 To 55   taulukko (x,b1,2)=0   Next xElse   For x=55 To a1   taulukko (x,b1,2)=0   Next xEndIf If a2&lt;5 Then   For  x=a2 To 5   taulukko (x,b2,3)=0   taulukko (x,b2,4)=0   Next xElse   For x=5 To a2   taulukko (x,b2,3)=0   taulukko (x,b2,4)=0   Next xEndIf If a3&lt;5 Then   For  x=a3 To 5   taulukko (x,b3,4)=0   taulukko (x,b3,5)=0   Next xElse   For x=5 To a3   taulukko (x,b3,4)=0   taulukko (x,b3,5)=0   Next xEndIf If a4&lt;25 Then   For x=a4 To 25   taulukko (x,b4,4)=0   taulukko (x,b4,5)=0   Next xElse   For x=25 To a4   taulukko (x,b4,4)=0   taulukko (x,b5,5)=0   Next xEndIf 'sijoitetaan portaattaulukko (a1,b1,2) = 2taulukko (50,3,2) =3taulukko (a2,b2,3) = 2taulukko (a1,b1,3) = 3taulukko (a3,b3,4) = 2taulukko (a2,b2,4) = 3taulukko (a3,b3,5) = 3taulukko (a4,b4,5) = 4 z=1 ' asetetaan oikea tasoRepeat ' testausta varten'If KeyHit (cbkeya) Then z+1'kentän uudestaan generointi jos syntyy umpikujiaIf KeyHit (15) Then   teleportti(ixT,iyT,z)   z=1   ixX=50   iyX=50   If taulukko (ixT,iyT,z)=1 Then      Repeat        ixT=Rand(1,60)        iyT=Rand(1,40)      Until taulukko (ixT,iyT,z)=0   EndIf   Text 10,530, \"Kenttä luotu uudestaan\"   DrawScreen   Wait 2000  EndIf SetFont logoCenterText 375,5, \"GILFs\"SetFont system      ' yläreuna    ix1 = 720    For ix = ix0 To ix1 Step 10    CenterText ix,iy0,Chr(173)    Next ix    iy1 = 470    ' Vasen reuna    For iy = iy0 To iy1 Step 10    CenterText ix0,iy,Chr(124)    Next iy    ' Oikea reuna    For iy = iy0 To iy1 Step 10    CenterText ix1,iy,Chr(124)    Next iy    ' Alaraja    For ix = ix0 To ix1 Step 10    CenterText ix,iy1,Chr(173)    Next ix          'piirto    For x=0 To 67      For y=0 To 42              If Taulukko(x,y,z) = 0 And Nakyvyys(x,y,z) = 1 Then            ixB = x*10 + 40            iyB = y*10 + 40            Color cbdark            CenterText ixB,iyB,\".\"            Color cbdarkgreen         End If         If Taulukko(x,y,z) = 1 And Nakyvyys(x,y,z) = 1 Then            ixB = x*10 + 40            iyB = y*10 + 40            CenterText ixB,iyB,\"#\"          End If           If taulukko (x,y,z) = 2 And Nakyvyys (x,y,z) = 1 Then            ixB = x*10 + 40            iyB = y*10 + 40            CenterText ixB,iyB,\"&gt;\"          End If         If taulukko (x,y,z) = 3 And Nakyvyys (x,y,z) = 1 Then            ixB = x*10 + 40            iyB = y*10 + 40            CenterText ixB,iyB,\"&lt;\"          End If         If taulukko (x,y,z) = 4 And Nakyvyys (x,y,z) = 1 Then            ixB = x*10 + 40            iyB = y*10 + 40            Color cbmagenta            CenterText ixB,iyB,\"O\"          End If         If taulukko (x,y,z) = 5 And Nakyvyys (x,y,z) = 1 Then            ixB = x*10 + 40            iyB = y*10 + 40            Color cbdark            CenterText ixB,iyB,\".\"            Color cbdarkgreen          End If                  Next y    Next x     ixXO = ixX    iyXO = iyX 'Ohjataan numpadilla / nuolilla    If KeyHit(75) Or KeyHit (203) Then        If ixX &gt; ix0 + 10 Then ixX = ixX - 10    End If    If KeyHit(77) Or KeyHit (205) Then            If ixX &lt; ix1 - 10 Then ixX = ixX + 10    End If    If KeyHit(72) Or KeyHit (200) Then        If iyX &gt; iy0 + 10 Then iyX = iyX - 10    End If    If KeyHit(80) Or KeyHit (208) Then        If iyX &lt; iy1 - 10 Then iyX = iyX + 10    End If    If KeyHit(73) Then         If ixX &lt; ix1 - 10 And  iyX &gt; iy0 + 10 Then            ixX = ixX + 10            iyX = iyX - 10        End If   End If    If KeyHit(81) Then       If ixX &lt; ix1 - 10 And iyX &lt; iy1 - 10 Then         ixX = ixX + 10         iyX = iyX + 10       End If    End If    If KeyHit(79) Then       If ixX &gt; ix0 + 10 And iyX &lt; iy1 - 10 Then         ixX = ixX - 10         iyX = iyX + 10       End If    End If    If KeyHit(71) Then       If ixX &gt; ix0 + 10 And iyX &gt; iy0 + 10 Then         ixX = ixX - 10         iyX = iyX - 10       End If    End If    'luodaan askel-laskuri ja kerrotaan askelten määrä, hitpointit sekä nykyinen tasoIf KeyHit (75) Or KeyHit (203) Or KeyHit (77) Or KeyHit (205)Or KeyHit(72) Or KeyHit (200)Or KeyHit (80)Or KeyHit (208)  Or KeyHit (73) Or KeyHit(81) Or KeyHit (79) Or KeyHit (71)Or KeyHit (74)Or KeyHit (78) Then laskuri+1Text 10,485, \"Olet liikkunut \" +laskuri +\" askelta\"Text 10,500, \"Olet \" +z +\". tasolla\"Text 650,485,  \"HP:\" +hp +\"/25\"     If nakyvyys(a4,b4,5) = 1 Then Text 10,515, \"Näet omituisen hohtavan portaalin\"     ixT = (ixX - 40)/10    iyT = (iyX - 40)/10 'mahdollistetaan liikkuminen tasojen välillä    If KeyHit (78) And  Taulukko(ixT,iyT,z) = 2 Then z+1    If KeyHit (74) And  Taulukko(ixT,iyT,z) = 3 Then z-1   'luodaan pelin päättymisilmoituksetIf z=0 Then MakeError \"Lähdet ulos luolasta ja löydät itsesi ydinholokaustin tuhoamasta maailmasta. Zombilauma hyökkää kimppuusi ja syö sinut\" 'pannaan portaali palauttamaan pelaaja luolan alkuun ja generoimaan luolasto uudelleenIf taulukko(ixT,iyT,z) = 4 Then   teleportti(ixT,iyT,z)   z=1   ixX=50   iyX=50   If taulukko (ixT,iyT,z)=1 Then      Repeat        ixT=Rand(1,60)        iyT=Rand(1,40)      Until taulukko (ixT,iyT,z)=0   EndIf   Text 10,530, \"Heräät taas luolan lattialta\"   DrawScreen   Wait 2000  EndIf 'pistetään ansat tekemään vahinkoa pelaajalledmg=Rand(1,6)If taulukko (ixT,iyT,z) = 5 Then    hp = hp-dmg    taulukko (ixT,iyT,z) = 0    Text 10,515, \"Astuit ansaan\"    DrawScreen    Wait 1500End If 'estetään pelaajaa kulkemasta seinien läpi    If Taulukko(ixT, iyT,z) = 1 Then        ixX = ixXO        iyX = iyXO    End If  'luodaan näkökentta    ixT = (ixX - 40)/10    iyT = (iyX - 40)/10     ixNO = -2    iyNO = -2       If ixT &gt; 0 Then ixNO = ixT - 2    If iyT &gt; 0 Then iyNO = iyT - 2       ixMax = ixNO + 4    If ixMax &gt; 65 Then ixMax = 67    iyMax = iyNO + 4    If iyMax &gt; 42 Then iyMax = 44       For ixN = ixNO To ixMax       For iyN = iyNO To iyMax          nakyvyys (ixN, iyN,z) = 1       Next iyN    Next ixN   'nälkäIf laskuri=1000 Then    Text 10,530, \"Sinulle alkaa tulla nälkä\"    DrawScreen    Wait 1500End If 'kuolemaIf laskuri=1500 Then MakeError \"Kuolet nälkään.\"If hp&lt;1 Then MakeError \"Kuolet.\"    'piirretään pelaajaColor cbwhiteCenterText ixX,iyX,\"@\"Color cbdarkgreen  DrawScreen Forever 'huonegenerointifunktioFunction huonegen (huoneminW,huoneminH,huonemaxW,huonemaxH,lkm,z)   For lk = 1 To lkm    While True    'arvotaan huoneiden sijainnit ja koot       a=Rand(2,55)       b=Rand(2,33)       huoneW=a+Rand(huoneminW,huonemaxW)       huoneH=b+Rand(huoneminH,huonemaxH)             'varmistetaan etteivät huoneet mene päällekkäin       iOK = True       For x=a To huoneW          For y=b To huoneH             If Taulukko (x,y,z) = 0 Then iOK = False          Next y       Next x     'luodaan huoneet       If iOK = True Then        For x=a To huoneW          For y= b To huoneH             Taulukko (x,y,z) = 0          Next y        Next x        Exit       EndIf    Wend   Next lk  End Function 'sijoitetaan ansat tasoilleFunction ansat (lkm,z)For lk=1 To lkm    While True       a=Rand(1,60)       b=Rand(1,40)             ok=True       If taulukko (a,b,z)=1 Then ok=False       If ok=True Then taulukko(a,b,z)=5       Exit    WendNext lkEnd Function 'generoidaan luolasto uudestaanFunction teleportti (x,y,z)For x=0 To 67   For y=0 To 44      For z=0 To 5      taulukko (x,y,z)=1      nakyvyys (x,y,z)=0      Next z   Next yNext x For zk = 2 To 5    hl = Rand(10,20)    huonegen (3,3,10,7,hl,zk)Next zk huonegen (2,2,7,7,10,1) For x=0 To 7   For y=0 To 10      taulukko (x,y,1) = 0   Next yNext x For z=1 To 5   For x=5 To 55   taulukko (x,4,z)=0   taulukko (x,30,z)=0   taulukko (x,40,z)=0   Next x     For y=5 To 40   taulukko (7,y,z)=0   taulukko (55,y,z)=0   Next y     For y=4 To 20   taulukko (25,y,z)=0   Next y     For x=20 To 35   taulukko (x,10,z)=0   Next x     For y=7 To 20   taulukko(47,y,z)=0   Next y     For x=47 To 55   taulukko (x,10,z)=0   Next x     For x=40 To 47   taulukko (x,10,z)=0   Next xNext z For x=45 To 57   For y=2 To 16      taulukko (x,y,1) = 0   Next yNext x taulukko(50,3,1) = 2 ' alastaulukko(2,2,1) = 3 ' ylös a1=Rand(2,60)b1=Rand(2,37)a2=Rand(2,60)b2=Rand(2,37)a3=Rand(2,60)b3=Rand(2,37)a4=Rand(2,60)b4=Rand(2,37) h1x1=a1-2h1x2=a1+5h1y1=b1-2h1y2=b1+5h2x1=a2-1h2x2=a2+3h2y1=b2h2y2=b2+4h3x1=a3-2h3x2=a3+3h3y1=b3-1h3y2=b3+6h4x1=a4-1h4x2=a4+2h4y1=b4-1h4y2=b4+7  For x=45 To 52   For y=2 To 4      taulukko (x,y,2) = 0   Next yNext x For x=h1x1 To h1x2   For y=h1y1 To h1y2         taulukko(x,y,2) = 0         taulukko(x,y,3) = 0   Next yNext x For x=h2x1 To h2x2   For y=h2y1 To h2y2      taulukko(x,y,3) = 0      taulukko(x,y,4) = 0   Next yNext x For x=h3x1 To h3x2   For y=h3y1 To h3y2      taulukko (x,y,4) = 0      taulukko (x,y,5) = 0   Next yNext x For x=h4x1 To h4x2   For y=h4y1 To h4y2     taulukko (x,y,5) = 0   Next yNext x taulukko (a1,b1,2) = 2taulukko (50,3,2) =3taulukko (a2,b2,3) = 2taulukko (a1,b1,3) = 3taulukko (a3,b3,4) = 2taulukko (a2,b2,4) = 3taulukko (a3,b3,5) = 3taulukko (a4,b4,5) = 4 For z=0 To 5   ansat (10,z)Next z End Function","categories": [],
        "tags": ["Coolbasic","gaming","roguelike"],
        "url": "http://localhost:4000/code/2019-12-12-GILFs/"
      },{
        "title": "ABCs of mathematical epidemiology",
        "excerpt":"Jupyter notebooks on infectious disease dynamics. From my Github. The topic is fashionable at the moment due to the Corona virus situation, so I decided to post these notebooks here. I wrote them during a course on mathematical modeling of infectious disease dynamics and they cover some of the basic topics from the course. These so-called compartmental models of epidemiology are famous, mathematically and intuitively simple, and also powerful. Many papers published nowadays still rely on more complicated and detailed models based on these (including papers on Covid-19). The SIR model is a highly famous fundamental model and a lot has been written about it in literature and online. SIR-model This is the most famous model. The equations governing it are as follows: \\[\\frac{dS}{dT} = - \\beta S I\\]\\[\\frac{dI}{dT} = \\beta S I - \\nu I\\]\\[\\frac{dR}{dT} = \\nu I\\]They represent three categories in the population of interest: Susceptibles (those who haven’t been infected yet), Infected (those with the illness being modeled), and Recovereds (those who have recovered and gained immunity, or alternatively died, such that they aren’t vulnerable to the illness anymore). The constants ( \\beta ) and ( \\nu ) are determined by the specific illness, by how infectious it is, and how long on average it takes to recover or die from it. The interpretation is that for all contacts between Susceptibles and Infecteds, there is a rate at which the disease is transferred, and a certain rate at which the Infected population recovers from the disease. Variations can be easily added to the equations to produce more elaborate models. For example, it is possible to add birth and death rates in the general populations as terms in the equations, or add more equations and therefore categories to account for possible latent periods and to differentiate between dead and recovered individuals. Similarly, differentiation between sexes can be made, for example, in the case of sexually transmitted diseases. Age groups could also be added, if they are affected differently by the disease. Such a system of ordinary differential equations is easily integrated and simulated with code such as the following. I probably copypasted most of it from some other blog anyway. # Analysis &amp; visualization of the basic SIR model%matplotlib inlineimport numpy as npimport matplotlib.pyplot as pltfrom scipy.integrate import odeintimport pylab# This allows using \\TeX in matplotlibplt.rc('text', usetex=True)plt.rc('font', family='serif')# Set parametersbeta = 0.21nu = 0.05N = 1.0# basic reproduction numberR0 = beta / nu# Define modeldef SIR(Y,t):    S,I,R = Y    dSdt =  -beta*S*I    dIdt =  beta*S*I - nu*I    dRdt =  nu*I    return [dSdt,dIdt,dRdt]# Show a timeline plot of the infectiontspan = np.linspace(0, 150, 150)i0 = 0.00001s0 = 1.0 - i0r0 = 0sol = ys = odeint(SIR, [s0,i0,r0], tspan, mxstep=50000)plt.plot(tspan, sol[:, 0], 'c', label='susceptible')plt.plot(tspan, sol[:, 1], 'k', label='infected')plt.plot(tspan, sol[:, 2], 'm', label='recovered')plt.grid()pylab.legend(loc='center right')plt.title(r\"$\\beta=\"+str(beta)+r\",\\ \\nu=\"+str(nu)+\",\\ R_0=\"+str(R0)+\"$\")plt.xlabel('time (days)')plt.ylabel('\\% population')plt.show()Here is the timeline of the disease produced by the above code. There is a noticable tip and a turning point for the disease, when the amount of viable susceptibles goes low enough. We notice how most of the population goes through the infection and becomes Recovered. The exact timeline and the shapes of the curves depend on the constants in the equation and therefore on the properties of the disease and of the population. These values define a highly contagious disease in a population where it can spread very effectively.  Next, we wish to study the dynamics of the disease in a “phase-plane” of Infected proportion of the population against the Susceptible proportion of the population. This is another way to find the “tipping point” of the epidemic. # Draw a phase plot in the S-I plane# tspan = np.linspace(0, 10000, 10000)Y0 = [s0,i0, r0]ys = odeint(SIR, Y0, tspan, mxstep = 500)plt.plot(ys[:,0], ys[:,1], 'c-') # pathplt.plot([ys[0,0]], [ys[0,1]], 'bo') # startplt.plot([ys[-1,0]], [ys[-1,1]], 'bs') # endplt.title(r\"$\\beta=\"+str(beta)+r\",\\ \\nu=\"+str(nu)+\",\\ R_0=\"+str(R0)+\"$\")plt.xlabel('\\% susceptibles')plt.ylabel('\\% infecteds')print(\"Final state of epidemic with starting values s0=\"+str(s0)+\", i0=\"+str(i0)+\": \\n\" +      \"s=\"+ str(ys[-1,0])+\", i=\"+ str(ys[-1,1])+ \", r=\"+str(ys[-1,2]))# Determine the point where the curve changes direction# (num. infecteds starts decreasing so epidemic dies out)## This can be deduced analytically from the equation for dI/dt:# dI/dt = (beta*S -nu) * I# as the point where beta*S = nuplt.plot([nu/beta,nu/beta],[0,np.max(ys[:,1])],'k-.',label=r\"$\\beta S = \\nu$\")pylab.legend(loc='upper right')# Thereforeprint(\"The number of infecteds in the population will start decreasing after \"       +str(np.argmax(ys[:,0] &lt; nu / beta))+\" days.\")plt.show()The starting point is the lower-right corner, where we have a fully Susceptible population and only the initial “patient zero” that is introduced into the population. The epidemic then traverses the curve towards the left corner.  The tipping point of the disease is visualized by the vertical line in the image.  The output of the code also gives the final fractions in the population of the three categories for a disease and a population with these particular values of the parameters. Only a small percentage survived without getting the infection, as we saw also in the previous image. Final state of epidemic with starting values s0=0.99999, i0=1e-05: s=0.0160404895464, i=-1.53270201903e-16, r=0.983959510454The number of infecteds in the population will start decreasing after 81 days.SIS-model This is a somehow simpler model with different dynamics. Here the equations are as follows. \\[\\frac{dS}{dT} = - -\\beta S I + \\nu  I = \\beta (N - I) I - \\nu  I\\]\\[\\frac{dI}{dT} =  \\beta S I - \\nu   I\\]There are only two categories: Susceptible and Infected. This fundamental model and its variations are useful for modeling endemic sicknesses such as the flu, where immunity is not granted after recovering from infection. %matplotlib inlineimport numpy as npimport matplotlib.pyplot as pltfrom scipy.integrate import odeint# Do some analysis of the SIS-infection model# In this model, we have the following system of two differential equations# dS/dt = -beta*S*I + nu * I = beta*(N - I)*I - nu * I# dI/dt =  beta*S*I - nu * I# We wish to look at the time behaviour and steady states of the system computationally# Analytically, the system can be solved to give the steady state (assuming beta*N &gt; nu, otherwise I -&gt; 0)# I_inf = N - nu/beta# S_inf = nu/beta# Set parametersbeta = 0.5nu = 0.2N = 1.0# Define the systemdef F(Y,t):    S,I = Y    dSdt =  -beta*S*I + nu*I    dIdt =  beta*S*I - nu*I    return [dSdt,dIdt]# Define evaluation pointsxstart = -0.0xend = 1.0ystart = -0.0yend = 1.0npoints = 20y1 = np.linspace(xstart,xend, npoints)y2 = np.linspace(ystart, yend, npoints)Y1, Y2 = np.meshgrid(y1, y2)t = 0u, v = np.zeros(Y1.shape), np.zeros(Y2.shape)NI, NJ = Y1.shape# Calculate derivativesfor i in range(NI):    for j in range(NJ):        x = Y1[i, j]        y = Y2[i, j]        yprime = F([x, y], t)        u[i,j] = yprime[0]        v[i,j] = yprime[1]         # Plot derivativesQ = plt.quiver(Y1, Y2, u, v, color='r')i0 = 0.0000001s0 = 1.0 - i0tspan = np.linspace(0, 1000, 100)Y0 = [s0,i0]ys = odeint(F, Y0, tspan, mxstep = 500)plt.plot(ys[:,0], ys[:,1], '-') # pathplt.plot([ys[0,0]], [ys[0,1]], 'bo') # startplt.plot([ys[-1,0]], [ys[-1,1]], 'bs') # endprint(\"Endpoint of epidemic with starting values s0=\"+str(y0)+\", i0=\"+str(z0)+\": \\n\" +      \"s=\"+ str(ys[-1,0])+\", i=\"+ str(ys[-1,1]))    plt.xlabel('susceptibles')plt.ylabel('% infecteds')plt.show()print(\"Analytical final state: s=\"+str(nu/beta)+\", i=\"+str(N - nu/beta))The transition to the final endemic state of the disease is easily visualized. Again, from the lower right corner towards the end-point of the line.  The same result can be calculated numerically, and for this particular model, also analytically (exactly): Endpoint of epidemic with starting values s0=0.9999999, i0=1e-07: s=0.4, i=0.6Analytical final state: s=0.4, i=0.6We can also calculate a timeline plot of population density for this model. # Show a timeline plot of the infectionimport pylabtspan = np.linspace(0, 100, 100)i0 = 0.00001s0 = 1.0 - i0sol = ys = odeint(F, [s0,i0], tspan, mxstep=50000)plt.plot(tspan, sol[:, 0], 'c.', label='susceptible')plt.plot(tspan, sol[:, 1], 'k.', label='infected')plt.grid()pylab.legend(loc='upper right')plt.xlabel('time (days)')plt.ylabel('% population')plt.show()Where we see a timeline to the stable state of the system.  Further reading ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/code/2020-03-24-epidemic/"
      },{
        "title": "Collection of minimal Docker web servers",
        "excerpt":"A collection of minimal Docker servers in different languages. I’ve recently created and published this repository. Within it, you will find a collection of Docker images for basic web servers across multiple languages. They are based on RDM sample submissions (starter packs) at Topcoder. This repository is NOT officially maintained by Topcoder or anyone else, but currently only by myself. More languages and web libraries are being added as I get to it. Feel free to download and use these images as starting points for any personal projects. For example, maybe you want to start writing some new web service with a REST API. You can just download a starter-pack server from here and get right to writing your API code. The images host static content and APIs on port 8080. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/code/2023-05-02-docker-demos/"
      },{
        "title": "Laiskan noidan sanat",
        "excerpt":"Lyhyesti melkein maagisesta riippumatosta, joka kykenee jopa ihmetekoihin. Ainakin voimaannuttaviin päiväunimatkoihin. (Samaiselta kurssilta) Riippumattoni raukea,Leposija liedon, laiskan,Päästä minut pälkähästä,Vaivoistani vapauta. Poista poika pintehestä,Vierettele velvoitteeni,Unohuta uudet, vanhat,Kurjat kaiket karkoita. Turhat huolet taakse heitä,Säädöt, stressini selitä,Pajattele puolestani,Selkävaivat selvittele. Nukahduta noiannuolet,Ranka riutunut raukaise,Liha väsynyt vetäise,Väsymästä lojumahan,Sujuvasti sluibaamahan.Kanna luota katehien,Luota loitsivien kauas. Eipä laula Lappalainen,Laula Lappi, noiu noita,Taikka tunge turjalainen,Taitavat näkijät näe.Kun mä uinun unten mailla,Loitsun luota lojun, lienen,Tuuittelen takkujani,Hykertelen hyvissäni. Kanna vaikka kalman maille,Tuuitappa Tuonelahan,Lykkää luottehet luokseni,Synnyt syvät syömmeheni. Sitähän nuo sanovatkin,Viisastelevat viekkahat,Jotkut paljon työtä tekee,Viisas pääsee vähemmällä.Muista myöskin virvoitella,Päiväunen päättäjäksi,Yöunen unohtajaksi, Tämän teon tekijäksi,Tämän päästön päästäjäksi ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2017-03-01-riippumatto/"
      },{
        "title": "Kuolleen kansan kulku",
        "excerpt":"Kuolleen kansan kulkiessa,Kuolleen korjuun koittaessa,Kuolleen mielen kostaessa,Kuolleen katseen katsoessa: Nouse tahto tieni ylle,Nouse raivo raukan päälle,Tämän tapon tappajaksi,Tämän saastan syöjähäksi. As a dead folk is a-marching,  As a dead harvest is a-starting,  As a dead mind is avenging,  As a dead eye is a-watching:  Rise, o true will, upon my path,  Rise, o rage, upon this poor man,  To kill this kill, to eat this filth,  To kill this kill, to eat this filth.– 2019 ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2019-02-18-kuolleen-kansan-kulku/"
      },{
        "title": "Kerro, kerro",
        "excerpt":"Kerro mulle kultaisista,Kaukaisista, kaihoisista:Kerro sadun hohtavista,Kerro ajan takaisesta. Kerro sanan soitannasta,Sen saavuttamattomista.Kerro kullan kiiltävistä,Sekä kaunaa kantaneista. Kerro taivon tuonpuolelta,Auringonkin alaiselta,Kerro kesän lehtiverhot;Kerro talvet, tähtitarhat. Kerro murheen murtamista,Kerro kaiken kieltäneistä.Kerro surun särkemistä,Kerro huolet hylänneistä. Kerro vielä kaukaisista,Kerro, kieli, likeltäkin;Kerro sanan soitannasta,Sen saavuttamattomista. Kerro suuresta rutosta,  Kerro ruton kaatamista,  Kerro ruton mananneista,  Kerro ruttoa kantaneista.  Kerro suuresta kivusta,  Kerro kivun kalvamista,  Kerro kivun kutsujista,  Kerro kipua kantaneista.  Kerro suuresta kuolosta,  Kerro kuolon korjaamista,  Kerro kuolon manaajista,  Kerro kuoloa kantaneista.  – 2019 ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2019-06-02-kerro/"
      },{
        "title": "Many a land",
        "excerpt":"-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- Barrow, thicket, in many shade,A land of shape and form: As in a haze to walk upon,A glade in dreamlike flow. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2019-08-11-land/"
      },{
        "title": "In meter",
        "excerpt":"Poetry prompt: “Those who dream by day are cognizant of many things which escape those who dream only by night.” -Poe From light of dawn to twilights hour, I walk in pallid, somber glamour, In dreams of spirit, word and form, In gazing, chasing, fabled lore.  At midnights hour to feel at last, Darkness falls so heavy, fast, A starlight vision, nigh recollection, Of that internal, high conviction. – 2020 ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2020-02-06-poe/"
      },{
        "title": "Kannel",
        "excerpt":"Kauniisti soi kanteleeni,monikielinen, mainio,soitin sorja sormilleni,laulukannel laululleni. Runoilevi runkonsakin,Soittonsa on suurenmoinen,Voimallansa vakuuttavi,Kauneuttansa kailottani. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2020-09-26-kantele/"
      },{
        "title": "Versmérték",
        "excerpt":"Unkarikin taipuu taiten,mitalliseen poljenta’an: Mértékben szeretnék szólni,A magyar nyelven mondani,Regéket, verseket zengni,Szép szavakkal szólatni. Virren viisaan vielä veistän,Saatan sanoist’ olevaksi,S mintha ez egy régi dalunk,Éneklek hangom hatalmát. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2020-09-26-mgr/"
      },{
        "title": "Kuihtuma",
        "excerpt":"Kuihdu nuppu, kalpehinen.Kuihdu kuulas, auttamaton.Vanhan veden virratessa.Vanhan vanan vartoessa. Vino, vieras, vastakkainen,Vaiti vaaran valjetessa.Tuntemattomasta tunne,Tietämättömästä tieto.Kuihtuessaan tuntee kyllä,Vähetessään senkin tietää,Väljehtyessä väkensä,Vaatimattoman voimansa.Tuo toivonsa, tahtomansa,Voimanlähde vaikealle,Unohdettu ja korvattu,Peitetty, jo pois pyyhitty. Vähenevi vielä ääni.Vähenevi vielä valo.Vähenee ja tuntee tuonkin,Tuntee tuon ja siten itsen. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2021-04-09-kuihtuma/"
      },{
        "title": "Siimes",
        "excerpt":"Siimes sielunmaisemaksiHiidenpeitosta hiljaiseenKumma käynti kuljennalleTuonne tuntemattomille Katalikkoon kaukaiseenKauas mielen mielivaltaanHengen haltijan alaksiTutulta maalta kauaksi Siimeksessä itsessänsäHengessänsä luonnossansaRuumiissansa ruumiistansaPiiristänsä piilemästä Katalikkoon kaukaiseenKauas mielen mielivaltaanHengen haltijan alaksiTutulta maalta kauaksi Siimeksestä askeleksiTajuksi taidoksi taipuiRuhon rungoksensa taitoiRunon sanansa saatoksi Katalikkoon kaukaiseenKauas mielen mielivaltaanHengen haltijan alaksiTutulta maalta kauaksi ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/katalikko/2021-04-09-siimes/"
      },{
        "title": "How are the real numbers constructed from the rationals?",
        "excerpt":"I wanted to start off this section with the first written work approaching “real” mathematics that I ever wrote. Here is my Extended Essay regarding the construction of the real number system from the rational numbers using the method of Cauchy completion. Written 2013. I am a former IB student. The International Baccalaureate is a two-year upper secondary education program, which in Finland is also preceded by one year of so-called pre-IB, to make it fit more neatly with the ordinary three-year lukio-system in Finland. The main difference between the two is the language of education and that less subjects are studied by the students, but more in depth, usually partly at university level. By that time, I had already decided to study mathematics at university, so mathematics was one of my Higher Level subjects, and I chose also to do my Extended Essay on it. The Extended Essay is an approximately 4000-word (this requirement is a bit more lenient in mathematics) written work, that is supposed to demostrate a capability for proper scientific writing within a subject and of a certain level of self-reliance and specialization by the student. Topology was an area of mathematics that was interesting to me then, and I was already superficially reading some university level texts on metric spaces and general topology by then. Eventually I ended up on the somewhat topological (as in it deals with metric space theory) subject of using Cauchy completions to construct the real numbers, as opposed to the Dedekind cut -method often taught in connection with the basics of mathematical analysis. This construction is, of course, interesting, since the natural numbers are easily constructed from formal logical axioms. From the natural numbers, the construction of all integers, and then also of the rational numbers is reasonably straightforward. Even the Pythagoreans had a notion of rational numbers, but struggled with irrational numbers. Finding a rigorous construction of the real numbers, then, is a major milestone in the foundations of mathematics. Here is my result. I received a good, but not stellar, grade for it. This browser does not support PDFs. Please download the PDF to view it: Download PDF. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/math/2020-07-15-EE/"
      },{
        "title": "Kokonaisvaihtelumenetelmät röntgentomografiassa",
        "excerpt":"Total Variation methods in computational X-Ray tomography, 2017. The work is in Finnish, as is this post. Linkki tutkielmaan. Kirjoitin kandidaatintutkielmani Helsingin Yliopistossa teollisuusmatematiikan professori Samuli Siltasen alaisuudessa. Olin käynyt hänen soveltavan matematiikan kursseillaan ja pidin hänen tyylistään. Koin aiheen myös mielenkiintoiseksi ja hyödylliseksi, sillä se oli matemaattisesti haastava, mutta myös soveltava ja tosimaailmaan relevantti. Röntgentomografiasta on myös helpompi kertoa ei-matemaattiselle kuulijalle, kuin jostain puhtaan matemaattisesta aiheesta kuten perusryhmistä tai ratkaisujoukoista. Soveltavuutensa vuoksi aihe sisälsi myös MATLAB-ohjelmointia. Tutkielman palautettuani päätin kuitenkin, ettei MATLAB ole minulle tarkoitettu :) Laskennallinen röntgentomografia on yksi tunnetuimpia ns. Inversio-ongelmien sovellusalueita. Inversio-ongelmissa tutkitaan vaikeita ja huonosti aseteltuja ongelmia, joissa ongelma-alueen mahdollistamien havaintojen perusteella pyritään selvittämään niiden takana oleva ilmiö, jota ei voida suoraan havainnoida tai mitata. Röntgentomografian tapauksessa on mahdollista mitata kappaleen, kuten ihmisruumiin, läpi kulkeneiden röntgensäteiden vahvuuden muutos. Kappaleen sisäistä rakennetta ei kuitenkaan ole mahdollista havainnoida vahingoittamatta kappaletta. Koska tiedämme, että säteet kuitenkin reagoivat sen verran kappaleen kanssa, että ne heikkenevät riippuen kappaleen rakenteesta, voimme rakentaa mallin tälle reaktiolle. Inversio-ongelma on nyt tämän mallin puitteessa vastaanottaa mittaustulokset ja löytää tapa “invertoida”, eli kääntää, malli ja löytää kappaleen sisäinen rakenne. Kokonaisvaihtelumenetelmät viittaavat menetelmiin, joissa ratkaisunmuodostuksessa otetaan huomioon ratkaisun ns. kokonaisvaihtelu. Tämä tarkoittaa, että jatkuvasti muuttuvat arvot ovat epätodennäköisempiä, ja yhtenäisempiä alueita sisältävät ratkaisut todennäköisempiä. Röntgentomografiassa ratkaisu on kaksiulotteinen (joskus myös kolmiulotteinen) kuva kappaleen sisäisestä rakenteesta, ja pienemmän kokonaisvaihtelun omaava ratkaisu sisältää tällöin enemmän yhtenäisiä alueita, kuten luukuori, jonka  tiheys on keskimäärin vakiota kappaleen ympärillä verrattuna aivonesteeseen. Pienempi kokonaisvaihtelu tarkoittaa siis selvemmin eri kappaleista koostuvaa kuvaa, jossa on vähemmän kohinaa. Kyse on niinkutsutusta regularisaatiomenetelmästä, jossa tuodaan ongelma-alueeseen olennaista a priori -tietoa mukaan ratkaisun rakentamiseen. Tässä tapauksessa pidetään a priori hyväksyttävänä oletuksena sitä, että luonnolliset kuvat, sekä luonnollisten kappaleiden röntgenkuvat, koostuvat yhtenäisistä kappaleista ja alueista mielivaltaisen vaihtelun sijaan. Kokonaisvaihtelumenetelmiä inversio-ongelmien ratkaisemiseen on monia. Tässä työssä keskitytään Chambollen-Pockin menetelmään, joka esiteltiin vuonna 2010. Alkuperäinen julkaisu on luettavissa tästä. Julkaisussa menetelmää demonstroitiin mm. kuvien kohinansuodatukseen, joka aiheena liittyykin röntgenkuvien rekonstruktioon, sillä rekonstruktoissa pyritään minimoimaan mahdollisista mittausvirheistä tai liian vähäisestä datamäärästä seuraavaa kohinaa. Aihe oli itselleni haastava. Haasteita oli sekä teorian että käytännön sovelluksen yhteydessä. Menetelmä perustuu konveksioptimisaation teoriaan, jota itsessään ei usein opeteta. Muun muassa subgradientti ja konveksi konjugaatti olivat täysin uusia käsitteitä itselleni. Optimisaatio itsessään on laaja oma matematiikan ja soveltavan matematiikan alansa, jota olen vasta myöhemmin pyrkinyt ymmärtämään tarkemmin. Menetelmä itsessään ratkaisee satulapisteongelman äärellisulotteisten vektoriavaruuksien välillä. Tämä matemaattinen näkökulma on sovitettava röntgentomografian ongelma-alueeseen, jossa mallinnetaan, miten kappale synnyttää mittaustulokset. Malli on myös muunnettava muotoon, jossa sitä voi käsitellä tietokoneella. Luotin paljon jo olemassaolevaan koodistoon työtä tehdessäni. Tietokoneistettua käsittelyä varten on muodostettava ns. Radon-matriisi, joka esittää kuvausta kappaleen pikselimuotoisesta kuvasta röntgenmittauksiksi. Matriisi on sidottu mittaustapaan, kuten säteiden määriin ja kulmiin. Tämä kuvaus on sitten invertoitava, jotta tätä mittaustapaa seuraavista oikeista mittaustuloksista voidaan pyrkiä luomaan rekonstruktioita. Monet laskut vaativat aikaa tietokoneella, ja mahdollisten bugien löytäminen ja korjaaminen oli näin ollen hidasta. MATLAB ei myöskään ole missään nimessä lempikieleni, muun muassa sen vuoksi, että jokainen funktio vaatii oman tiedostonsa. Tällöin työkansio täyttyy helposti, ja toimivien funktio- (eli tiedosto-)nimien tärkeys korostuu merkittävästi. On helppo menettää yhtenä iltana hyvin alkanut “flow”, kun täytyy etsiä oikea paikka, mihin uutta toiminnallisuutta kirjoitti, tai muuten vaan eksyä tiedostoviidakkoon. Tämä on tietenkin vain henkilökohtainen mielipiteeni ja kokemukseni. MATLAB on laajasti käytössä oleva suosittu ja voimakas työkalu, ja on monia alueita, missä se on yksinkertaisesti paras muihin vaihtoehtoihin verrattuna. Esimerkiksi Python-kielen numeeriset ympäristöt ovat nykypäivänä erittäin kehittyneitä ja suosittuja, mutta monin paikoin MATLAB vie nykyäänkin voiton. MATLAB on myös vahvasti sidottu omaan kehitysympäristöönsä, joka tarjoaa monia lisätyökaluja pelkän koodin ajamisen lisäksi. Olen itse kuitenkin suoraan sanottuna huono käyttämään IDE-ympäristöjä ja suosin useimmiten yksinkertaista tekstieditoria. Vertasin yllä mainitsemaani menetelmää perinteiseen Radon-inversion menetelmään. Lopputuloksena on mainittava, että vaikka Radon-inversio on erittäin toimiva ja teoreettisesti pätevä inversiomenetelmä röntgentomografiseen rekonstruktioon, se antaa äärimmäisen heikkoja tuloksia, jos mittauksia ei oteta tarpeeksi monta kappaletta koko kappaleen ympäri tasaisesti eri kulmista. Kokonaisvaihtelua minimoiva ratkaisu kykenee antamaan luotettavia rekonstruktioita huomattavasti pienemmillä kulmilla,  ja näin ollen siis myös pienemmillä säteilymäärillä. Kokonaisvaihtelupohjaiset menetelmät ovat myös yleiskäyttöisiä, ja niitä voidaan soveltaa myös muihin inversio-ongelmiin kuin röntgentomografiaan. Työ on palautettu syksyllä 2017. Se hyväksyttiin korkeimmalla arvosanalla. This browser does not support PDFs. Please download the PDF to view it: Download PDF. Ohessa myös työlle kirjoittamani kypsyysnäyte. This browser does not support PDFs. Please download the PDF to view it: Download PDF. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/math/2020-07-15-roentgen/"
      },{
        "title": "Wavelet-analysis based image steganography with MATLAB",
        "excerpt":"A wavelet analysis based steganography tool for MATLAB. Repository with code. Writeup with details. This browser does not support PDFs. Please download the PDF to view it: Download PDF. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/math/2021-06-7-wavelets/"
      },{
        "title": "An excursion into Tidal",
        "excerpt":"About a year ago, I was experimenting with Tidal. Tidal is a framework for the Haskell programming language that allows for music programming, and more specifically, live coding. Live coding is a practice where a programmer creates music with a programming tool in a real-time fashion, so instead of creating a song.file that, when evaluated, produces song.mp3 or whatever, the code is created real-time while performing or recording, and modified on-the-fly. An example of Tidal code is shown below: d1 $ slow 1 $ stack [  every (choose [2,4]) (slow 2) $ slow 2  $ n \"a4 as4 d4 d4\"  -- $ n (scramble 8 \"[d4 a4] d4 [d4 as4] f5 [d4 g4] as4 [d4 f4] g4\")  # s \"supermandolin\" # pan (slow 8 (rand)) # gain \"1.2\" # sustain \"1.5\",  every 2 (slow (choose [3, 2])) $ slow 2  $ n (scramble 4 \"[d4,f4,a3] [as3,f3] [f4,d3,a3] [e3,g3]\")  # s \"supercomparator\" # gain 0.75 # sustain 2.0 # attack 2.0,  sound \"bd:3 ~ bd:3 ~\" # gain 1.2,  every 2 (slow 2) $ sound \"ho*4\" # gain \"0.45\" # pan (slow 4 (rand)),  slow 2 $ sound \"cp\" # gain \"0.8\"]where the code defines five different sound sources: a “supermandolin” sound, a “supercomparator” sound, and the percussion elements consisting of a bass-drum (“bd:3”), hi-hats (“ho”) and a clap sound (“cp”), that play simultaneously when running the code . The supermandolin and supercomparator are presets within the built-in synth, and can be configured with parameters such as attack, delay, sustain and release. The percussion elements, “bd:3”, “ho”, and “cp”, are samples included with the software. Most of my recordings from that time can be found in this playlist. I only scratched the surface of what is possible with the tool, but already found the results quite fun and interesting. A lot of things are possible with the built-in synth, samples and the basic patterns that can be found in the documentation. The most aurally pleasing / closest to serious music is this first track, “Tidal1.mp3 / synth efektei”, where I was able to reach some pretty nice sounds when I discovered the effect parameters that could be given into the synth, such as reverb and such. The melodies are all partly randomized, choosing notes from a given list of notes according to different patterns. The others are largely experiments in rhythm and the different patterns doable in Tidal. Particularly interesting was when I went a bit nuts with the file pianoimpro.tidal. Where IMO the quite heavily randomized piano can be made to sound quite lively. I took this craziness even further to create the following track: where the distortion at the end was caused by my managing to cap my CPU levels with the code :) In effect, the melodies and “melodies” are created by insane long lines of, say, the form below, and then occasionally changing the effective note-producing line by commenting/uncommenting. d5 $ slow 128 $ every (choose[16,64,32,32,64,128]) (slow 1) $ every (choose [1,1]) (degradeBy 0.5 . slow 1 . loopAt 0.25 . gap 4 . striate 128 . degradeBy 0.5 . fast 1) $ stack [  every (choose [2,4,8,16]) (degradeBy 0.2 . slow (choose [1,2])) $ degradeBy 0.01 $ slow 8    $ slow 4 $ every 4 (degradeBy 0.25 . fast 1)  $ every (choose [1,1]) (linger 0.75 . degradeBy 0.25 . gap 2 . loopAt 1 . fast 1 . striate 128 . degradeBy 0.95 . fast 2)  $ n (scramble 16 \"[ ~ ~ fs4] [~ [g4,b4]] [~ a4 ~] [~ [fs4,as4]] [fs4 ~ a4/2] [[fs4,a4] ~ a4] [as4 [ds4, gs4] ds4] [f4 [f4,a4] f4] [~ ds4,g4] [[g4,b4] ~] [~ [fs4,as4]] [c4 ~ ~] [ ~ ~ as4] [fs4,as4] [as4 g4 ~] [[c4,ds4] ~]\")  # s \"superpiano\" # pan (slow 2048 (sine)) # gain 0.8 # sustain 4 # crush 7  # attack 0.1 # release 2] # room 0.3 # size 0.3The heights of my Tidal madness from this period are distilled into the following two recordings, “not asmr” and “mystic”, where I used a plucked-string sound with the randomized melody creation methods. The results are reasonably creepy, being at times musical and at others, quite something else. I’ve put a dump of most of the files I created while I was playing with Tidal into the following github repository. I created most of the recordings by evaluating the files or parts of them and then changing the parameters by toggling different commented lines as evaluated / not. I used Audacity to record these tracks. https://github.com/gingerdeer/tidalcycles-ideas Tidal can be made to output MIDI, and can therefore be used with any software synths and virtual instruments that accept midi input, that is to say: all of them. If I’m to return to Tidal some day, I will likely start by hooking it to my favourite synths and going for something a bit less random with the available commands. it's pronounced /ˈɹændəm/","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2019-04-12-excursion-tidal/"
      },{
        "title": "Free VSTi series: Synth1",
        "excerpt":"Synth1 - a famous free software synthesizer by Ichiro Toda. These two tracks were created completely with the Synth1 VST. I’m quite proud of them both, the synth is obviously very powerful and capable. A heavyweight of the free synth world. Even the percussion elements are created with it in these tracks. I’ve since used it in some way in most of my tracks, but in these tracks every sound was created with it, if I remember correctly. Smile Eater: The above is among the ones I’m most proud of so far. Enter Mystic: which goes deeper into heavy atmospherical and even mystical territory.             Part of the same cycle is also the following, though I don’t remember whether everything in it is created with the synth, or just most of it. d + b:             The Synth1 synthesizer:Mine was pink though. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2019-04-28-synth1/"
      },{
        "title": "Free VSTi series: ZynAddSubFX",
        "excerpt":"Some tracks created with the ZynAddSubFX free virtual synthesizer available on multiple platforms. These were created on Ubuntu Studio, while I was out of a Windows environment. The drum sounds in both are sampled using free samples, but the melodies and backgrounds are created with the synth.Sims Minus is a slow and simple ambient piece: While Side Quest approaches a Drum ‘n Bass sound, though still remaining slow and ambient: I’m personally quite fond of the sound in this one. The synth has a large number of quality and non-quality presets, and a large variety of knobs and effects for the user to play with: ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2019-04-28-zynaddsubfx/"
      },{
        "title": "Well, it's a start",
        "excerpt":"MIDI tracks from the ninth grade. I started music as a hobby in the 8th grade when I bought my first kantele to play. I had been interested in Finnish folk music and folk metal through the internet and wanted a kantele of my own. This lead to having to learn the basics of music. I soon spent large amounts of time on the internet reading through wikipedia pages on basic music theory. I’m the kind of person to get much too obsessed about a single topic at a time and then possibly completely forget about it later on. I soon bought a full-size Casio keyboard to practise my music and, wanting to jack it up to my computer, ended up learning about MIDI. The rest of my time was largely spent playing video games and reading. Especially video game and fantasy music were therefore big on my interests list, which eventually lead to my creating these tracks. They helped me up my grade a little in a music course I was taking, since I couldn’t play guitar, sing, or be in any way arsed to actually participate during the lessons… If I remember correctly, I used a totally-not-warez Guitar Pro software or the like to compose the MIDI for them, and then used a SoundFont player to render them with some soundfonts and effects. Looking back as an adult, I’m quite impressed with how little social life I must have had back then considering the amount of work and detail I managed to put into these. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2019-07-17-old/"
      },{
        "title": "A few tunes",
        "excerpt":"Some intrumental pieces.  Here, the title says it all, a short piano tune that just won’t stay put:  The following is straight from fantasy-land. Mossy greens, hanging trees, moist air and the ever-unescaping feeling of something ageless, magical around you:  Then, something darker is reached.  The Finnish dark-ambient kantele project Nest remains for me one of the truly more impactful bands that I’ve known. I improvised a short imitation in their honor. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2020-05-28-tunes/"
      },{
        "title": "Announcing Snow-form, my first single",
        "excerpt":"Announcing the first official GIDE release: Snow-form! My first ever single release is now available from most digital distributors. The song is a minimal electronic dance tune in the Progressive House genre. More tunes will be sure follow in the following months. I intend now to take a step towards more serious music distribution under my main project GIDE. I’ve published under the name GIDE for quite some time on Soundcloud, but now took the step to publication under mainstream streaming, distribution and publishing services. GIDE · Snow-formThis particular site may still contain strange personal musical explorations not necessarily related to GIDE. I have many other, darker and more experimental, side projects also in the works, under which I shall be able to release other kinds of music than the House/EDM style, which forms my main focus. Bandcamp ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2021-04-09-first-single/"
      },{
        "title": "Spotify playlist: Chill Haus",
        "excerpt":"My awesomest House music playlist on Spotify I’ve spent years now collecting the chillest House style beats into this huge 300+ track playlist. It works for almost any occasion, I often have it playing when working, reading, relaxing, partying or playing video games. The playlist is still updated any time I come across new tunes that fit the bill. I love House and this list is one way for me to show that love. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2021-06-17-playlist/"
      },{
        "title": "Focusing on You / I Think You Should",
        "excerpt":"Announcing Focusing on You / I Think You Should! Available from Bandcamp at: Focusing on You / I Think You Should by GIDEAnd on Spotify: Bandcamp ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2021-06-19-focusing/"
      },{
        "title": "Spotify playlist: Futurepop",
        "excerpt":"Huge Futurepop / EBM playlist on Spotify It started with 80s synthpop and slowly grew into a full obsession with bands like Assemblage 23 and VNV Nation representing this kind of heavier synth music. Eventually I started collecting this huge playlist of all the good Futurepop albums that I’ve come across. Check it out! ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2021-10-27-futurepop/"
      },{
        "title": "Dropping Temperatures",
        "excerpt":"Presave link: gate.fm/l39KYG1  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2021-12-19-dropping/"
      },{
        "title": "Dropping Temperatures Released",
        "excerpt":"Dropping Temperatures EP out on all streaming platforms now! Please have a listen, if you wish. This release marks the culmination of a number of different directions that I have been putting efforts on, and ties them together into a sound that I feel is both plausible and enjoyable, but also somewhat unique. High quality lossless audio available on Bandcamp, as always, and with a discount for buyers of the whole discography. Dropping Temperatures by GIDESome songs are also available on Youtube, but some songs there are the wrong demo version. Spotify / Bandcamp have the true versions.  ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2021-12-30-droppingout/"
      },{
        "title": "Spotify playlist: Dark ambient",
        "excerpt":"Background dark ambient sounds. Sometimes you just need some noise in the background, but normal music is too distracting. If rainforest sounds and whale singing is not your jam, try these slightly darker sounds instead. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2023-03-24-darkambient/"
      },{
        "title": "Spotify playlist: Goth rock",
        "excerpt":"Yet another huge themed Spotify playlist. This time for when you’re just feeling too goth for anything else. I decided to put this list together when I eventually realized that I can’t just listen to the same Fields of The Nephilim albums on repeat. Enjoy. Or don’t. Who cares anyway, right. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2023-03-24-gothrock/"
      },{
        "title": "Hiatus update",
        "excerpt":"GIDE updates after the last year’s hiatus. Things are currently picking up again regarding this underground techno/house + downtempo music project. We signed our first promo deal ever last year, but things eventually got a bit delayed. If everything works out, there will be a release soon-ish through a partner party for the next GIDE release: Procrastination. Additionally, I’m focused on fixing up some social media presence and consolidating the data and experience for the last self-release sprint. There will also be official visualizers getting added to the Youtube channel during the next few weeks, and possibly a few unreleased tracks as well. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2023-03-31-hiatus/"
      },{
        "title": "Two summer singles",
        "excerpt":"GIDE summer releases. Marketing update. A short Submithub campaign grew Spotify’s monthly listeners from 2 (hiatus number) up to around 100 for this month, peaking at 109. This puts us slightly above most hobbyists in Spotify activity :) At least two single releases scheduled for this summer. The first will be a self-release, Weekend Trip, releasing 1st of June. The second will be through Regroup Records: Encounter, 1st of July. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/music/2023-05-24-summerupdate/"
      },{
        "title": "Kalevalan valta ja voima",
        "excerpt":"Kurssityö eräältä kalevalaa käsitelleeltä kurssilta. Löysin tämän arkistoistani ja päätin julkaista tähän. Pohdintaa Lönnrotin Kalevalan valta-asetelmista. Muut opiskelijat ovat jo pohtineet Kalevan kansan ja Pohjolan väen välistä vastakkainasettelua ainakin hyvä-paha -akselilla, sekä johtohahmojensa, eli Väinämöisen ja Louhen, johtajuuden kautta. Koen itse hedelmälliseksi jatkaa johtajuuspohdinnan jälkeen Kalevalan ja Pohjolan yleisiä valtarakenteita sekä voiman käyttöä yleensä Lönnrotin Kalevalassa. Kuten muut ovat todenneet, yksinkertainen hyvä vastaan paha -vastakkainasettelu ei välttämättä ole erityisen luonnollinen Kalevalaa tutkittaessa; erityisesti kummankin johtohahmon voi nähdä omaavan sekä hyviä että pahoja piirteitä. Pohjan akan eli Louhen hahmo ei toimi pahuuden personifioitumana kuten aluksi voisi luulla, hän omaa monia hyvänä nähtäviä piirteitä, kuten äidillisyyttä ja tahtoa suojella kansaansa. Jos hän on paha, niin se on usein vastauksena häntä ja kansaansa vastaan tehtyihin vääryyksiin. Lönnrotin Kalevala kuitenkin keskittyy juurikin Kalevan kansaan ja Väinämöiseen, joiden tietynlaisena vastavoimana Pohjola esiintyy; tällöin on luonnollista asettaa Pohjolalaiset pahoiksi, koska pääähenkilöiksi halutaan ”hyviksiä”. Väinämöinen itse edustaa monia hyviä puolia kansansa yhteistyöhaluisena johtajana sekä väkevänä laulajana, mutta myös ahneutta, itsepäisyyttä ja tuomitsevuutta. Hän ajaa Ainon itsemurhaan, lietsoo ystävänsä Sammon ryöstöön, sekä tuomitsee Marjatan pojan surmattavaksi. Näin ollen voi olla luontevampaa tarkastella hänen ja Louhen, sekä heidän edustamiensa kansojen välisiä suhteita yleisemmin kuin suoran kaksijakoisen moraalijärjestelmän puitteissa. Väinämöinen on teoksen tietynlainen päähahmo. Hän on läsnä maailman syntyessä, hän polttaa ensimmäisen kasken, ja toimii teoksen monen päätapahtuman joko liikkelleasettajana tai muuten osallisena pääagenttina. Hän on voimakas tietäjä, joka taitaa tuonpuoleiseen matkaamisen taidon viisautensa lisäämiseksi. Hän luo ensimmäisen kanteleen, sekä on kanteleensoiton kiistaton mestari maailmassa, kyeten maagisiin tekoihin soitollaan. Hän on kansansa johtaja juurikin myytillisen syntynsä sekä ylivertaisen tietäjyytensä vuoksi. Tietäjänä ja väkevänä laulajana hän kantaa sanan voimaa ja kykenee vaikuttamaan maailmaan ja sen eläjiin laulunsa avulla. Hän on myös suuri sotamies joka pystyy miekallansa siihen, mihin muut eivät. Näin esimerkiksi suuren hauen kanssa, jota Ilmarinen ja Lemminkäinen eivät kykene tappamaan, mutta jonka Väinämöinen tappaa vaikeuksitta. Hän ei ole kuitenkaan teoksen mahtavin voima, hän usein itkee ja rukoilee apua sekä muilta hahmoilta, että taivaan jumalilta ja luonnonhengiltä: sekä Ukko Ylijumalalta ja luonnottarilta, että kristilliselta luojahahmolta Jumalalta. Hän ei myöskään ole Pohjolan emäntää voimakkaampi vaan enemmänkin vertainen. Kumpikaan heistä ei kykene tuhoamaan toista vaan he vastaavat vertaisina toistensa tekoihin. Hän kykenee parantamaan Louhen lähettämiä vitsauksia ja Sampoa ryöstettäissä päädytään jonkinmuotoiseen tasapeliin jossa Sampo hajoaa. Louhi esitetään Pohjolan kansan hallitsevana matriarkkana. Häntä lähestytään hänen tyttäriensä vuoksi, joita Kalevan hahmot kaihoavat vaimoiksi. Hän vaatii kosijoilta suurtekoja ja myöntääkin yhden tyttärensä Ilmarisella vaimoksi. Häät pidetään rauhaisissa merkeissä ja kansojen välille voisi jopa toivoa liiton syntyvän tämän avioliiton myötä. Tämä jää kuitenkin toteutumatta. Pian kutsumatta jäänyt Lemminkäinen tulee nimittäin lietsomaan sotaa ja tappaa Pohjolan isännän. Tämän johdosta Louhi kerää sotaväkeä ja lähettää heidät sotatoimiin Lemminkäistä vastaa. Lemminkäinen pakenee, mutta kotinsa poltetaan ja tuhotaan. Toiselle kostoretkelle hän ei pääse, sillä Louhi estää maagisilla voimillaan hänen hyökkäyksensa. Vaimoksi lähetetty Pohjan Tyttö kuolee Kalevalassa, jonka jälkeen Kalevalan voimahahmot lähtevät sotatoimiin Pohjolaa vastaan. Louhen toinen tytär ryöstetään ja pian Väinämöinen, Ilmarinen sekä Lemminkäinen lähtevät Sammon ryöstöön. Louhella on suuri valta yli luonnonvoimien. Hänet kuvataan ylivertaiseksi noidaksi, joka kykenee lähettämään vihollistensa ylle pakkasta, myrskyjä, sumua ja sairauksia. Loppupuolella hän jopa varastaa ja piilottaa auringon, kuun ja tulen Väinölän kansalta. Hän on myös kykenevä kutsumaan voimakkaan Iku-Turson vastustajiensa kimppuun. Hänellä on suuri kansa hallussaan, jonka hän voi tahtoessaan käskeä sotaan. Tyttärensä eivät ole mitättömiä myöskään. Heidät kuvataan äärimmäisen kauniiksi ja tahdotuiksi, mutta myös viisaiksi ja taikavoimaisiksi. Kumpikin johtohahmo, sekä Kalevalan muut sankarit ilmentävät voimaansa sekä fyysisellä ylivertaisuudella, että loitsun voimalla. He kykenevät uskomattomiin suurtekoihin miekkojensa ja työkalujensa kanssa, mutta suurimmat voimannäytöt Kalevalassa tapahtuvat juurikin laulun ja loitsun, sanan voiman kautta. Loitsut ja syntysanat koetaan äärimmäisen tärkeinä, Väinämöinen sanojen puuttessa matkustaa jopa Tuonelaan sekä kuolleen tietäjähahmon, Antero Vipusen kitaan niitä hakemaan. Tässä näkyy myytillinen näkemys siitä, että tieto asiain synnystä antaa syntyjen tietäjälle valtaa hallita niitä. Esimerkiksi tulen aiheuttaman vamman hoitaminen vaatii tiedon tulen synnystä. Väinämöisen ja Joukahaisen kaksintaistelussa voittaja valitaan juurikin suuremman tiedon ja laulutaidon kautta: kun Joukahaisen tiedot pettävät, haastaa hän Väinämöisen miekkojen taistoon, mutta Väinämöinen kykenee laulamaan hänet suohon ansaan. Joukahainen lupaa siskonsa vaimoksi Väinämöiselle pakoon päästäkseen. Avioliittoa käytetään vallan välineenä Kalevalassa. Ainoa tarjous jonka Väinämöinen Joukahaiselta hyväksyy päästääkseen tämän vapauteen on Joukahaisen sisko Aino vaimoksi Väinämöiselle, jonka myötä hän pyörtää sanansa. Aino hukuttautuu, mikä johtaa Joukahaisen uusiin vihoihin Väinämöistä kohtaan. Pohjolan tyttäret nähdään Kalevalaisten halun kohteen, joita jatkuvasti pyritään avioliittoon saamaan. Suuri osa teoksen suurteoista tapahtuu juurikin heidän vuoksensa. Sampo taotaan, jotta Ilmarinen saisi Pohjolan neidon itselleen, joka kuitenkin kieltäytyy. Myöhemmin Ilmarinen suorittaa kaikki Pohjolan emännän vaatimat uroteot saadakseen Pohjolan tyttären itselleen. Tyttären kuolema johtaa uuteen kosioretkeen, joka välillisesti johtaa Sammon ryöstöön. Sampo itsessään voidaan nähdä jonkinlaisena vallan merkkinä tai esineellistymänä teoksessa. Se tuottaa viljaa, suolaa ja muita rikkauksia omistajalleen. Saatuaan sen haltuunsa Pohjolan kansan kuvataan elävän rikkaudessa ja yltäkylläisyydessä. Sen sanotaan jopa tuottavan ikuista onnea Pohjolalle. Nämä rikkaudet koetaan Väinämöisen toimesta liian haluttavaksi, joten Kalevan sankarit lähtevät  kateudesta sitä ryöstämään. Ryöstö johtaa suuriin sotatoimiin ja päättyy lopulta Sammon hajoamiseen. Sammon suuren mahdin ja merkittävyyden näkee Louhen sanoista Sammon suistuttua: ”Jo minulta valta vaipui, / jo aleni arvioni: / eloni meni merehen, / Sampo särkyi lainehisin!” Rikkinäisenäkin Sammon palaset ovat jonkinlaisia voimakappaleita, jotka kykenevät turvaamaan sadon Kalevalan kansalle. Kateus on myös merkittävä tekijä teoksen tapahtumien liikkeellepanossa. Moni Kalevalan teoista syntyy hahmojen kateudesta jotain kohtaan. Joukahainen hyökkää Väinämöisen kimppuun, koska on kade tämän tietotaidolle ja kokee itse olevansa suurempi laulaja. Lemminkäinen kantaa kaunaa, koska häntä ei kutsuttu Pohjolan häihin, Väinämöinen on alituiseen kade, kun ei saa Pohjan tyttäriä tai Ainoa itselleen ja Sampokin ryöstetään kateudesta Pohjolan rikkauksia kohtaan. Monissa loitsuissa viitataankin loitsijaa kohden katehiin, joiden voimaa pyritään mitätöimään ja joita vastaan toimitaan. Esimerkiksi Lemminkäinen Ukolta voimia kutsuessaan perustelee aikomuksensa seuraavasti: ”(jolla) kaa’an maalliset katehet, / ve’elliset velhot voitan”. Kateus on siis jotain jota sankarien viholliset kantavat, jota vastaan on taisteltava, mutta teoksen sankarit myös itse kokevat kateutta ja lähtevät sen vuoksi jopa sotaan. Kalevala ja Pohjola muodostavat Lönnrotin Kalevalan tärkeimmän valta-akselin. Niiden välinen dynamiikka muodostaa suurimman osan teoksen tapahtumista. Väinämöinen ja Louhi esiintyvät näiden kahden kansan johtohahmoina, toistensa vastavoimina. He omaavat monia yhtäläisyyksiä piirteissään ja ovat molemmat suuria tietäjiä, jotka kykenevät uskomattomiin voimatekoihin. Heillä on myös eroja, Väinämöisen voimankäyttö keskittyy useimmiten parannukseen ja rakentamiseen, kun taas Louhen kuvataan hallitsevan luonnonvoimia ja lähettävän vitsauksia. Voimaa ja valtaa käsitellään teoksessa sekä tietäjyyden ja noituuden tasolla, että maallisemmin omistuksenhalun ja kateuden kautta. Pohjolan ja Väinölän vastakkaiset voimat eivät kykene kukistamaan toisiaan taikka saavuttamaan rauhaa ja loppuratkaisu päättyykin Sammon halkeamiseen. Louhi vetäytyy Pohjolaansa ja Väinämöinen kotiinsa, jossa lopulta joutuu sijattomaksi ja purjehtii pois. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/other/2017-03-01-valtavoima/"
      },{
        "title": "Pari sanaa suomalaisesta demoskenestä",
        "excerpt":"Suomen demoskene on vastikään lisätty Unescon kansanperinnön listalle. Folkloristiikan kursseilla pari vuotta sitten tuli kirjoitettua monenmoista. Tämän uutisen innoittamana julkaistu. Suomalainen demoskene Tuon suomalaisena aineettomana kulttuuriperintönä esille suomalaisen demoskenen ja siihen liittyvän kulttuurin. Skene on kiinnostavaa, koska se on teknologian ja tietokoneiden kehityksen sallimaa uutta kansanperinnettä, joka on kuitenkin jo käymässä “vanhaksi” teknoilun tarkoittaessa nykyään lähinnä pelaamista sekä sosiaalisivujen ja meemien selailua. Se ei ole myöskään puhtaan suomalaista, vaan periaatteessa täysin kansainvälistä, painottuen kuitenkin varsinkin pohjoiseen Eurooppaan ja juuri Suomeen. Se on suomalaista, muttei vain suomalaista; oli siellä Unescon listoilla paljon muitakin moniin maihin kuuluvia kulttuuriperintökohteita. Demot viittaavat visuaalisiin, yleensä musiikkia sisältäviin tietokoneohjelmiin, joiden jujuna on saada mahdollisimman näyttävä ja monipuolinen esitys mahdollisimman pienikokoiseen ohjelmaan. Näin tekijöiden sekä luovuus, että raaka taito ja älykkyys pääsevät puoliinsa, ja kauniiden efektien luomiseksi joudutaan usein perehtymään ns. proseduraaliseen luomiseen, eli kuinka kuvio tai efekti saadaan luotua jonkin sen noudattaman säännönmukaisuuden perusteella sen sijaan, että tekijä kirjoittaisi sen auki. Tätä voi verrata kurssilla käsiteltyihin mnemoteknisiin työkaluihin, kuten runolaulannan mitallisuuteen, tai esimerkiksi jazz-musiikin improvisaatioon määrättyjen skaalojen ja sointukulkujen sisällä, joissa juurikin rakenne toimii ohjaamassa sisältöä. Skenellä on Suomessa pitkä historia 80-luvulta eteenpäin. Jopa melkein kaikkien jo tuntemat Assembly-festivaalit olivat alunperin juurikin demoskenelle erikoistunut tapahtuma, vaikka ne nykyään ovat jäämässä taka-alalle pelien piiloon. Tällaisissa demopartyissa ryhmät luovat tai viimeistelevät demojaan, sekä esittävät niitä muille osallistujille demokilpailuissa. Demoihin liittyvä osaaminen on moni-alaista ja siirtyy osaajalta osaajalle. Niiden luominen vaatii valtavaa osaamista tekijöiltään, eikä selviä oppikirjoja tai internet-tutoriaalejakaan ole. Toiveikkaan alokkaan on etsittävä osaajia käsiinsä, perehdyttävä jo luotujen teosten toteutukseen, sekä hengattava sopivissa netin foorumeissa ja IRC-chattihuoneissa. Demot ja niiden skene vaativat mielestäni varmasti suojelemista. Tietokonekulttuurissa on sukupolvien välillä laaja ero: siinä missä ennen piti käytännössä osata ohjelmoida jos halusi saada mitään aikaan laitteillaan, riittää nykyään näytön näpäytys ilman ymmärrystä taustalla taikovasta teknologiasta. Varsinkin laajempi tietoisuus aiheesta, sekä hyvien oppaiden luominen kiinnostuneille nörteille auttaisi huomattavasti tämän äärettömän mielenkiintoisen kulttuurin jatkumista ja selviämistä. En esim. itse ole koskaan käynyt Assyilla tai päässyt muutenkaan oikein sisälle demomaailmaan vaikka välillä melkein haluaisinkin. En ole ainoa joka on asiaa pohtinut, tässä tietokonekulttuurin erikoislehden Skrollin käsittely aiheesta: https://skrolli.fi/2013/07/miksi-demot-ovat-niin-tympeita/ Sekä tietenkin esimerkkinä pari sopivan tajunnanräjäyttävää demoa: (Kyseessä on ns. 4k-demo, eli videon ja musiikin tuottava ohjelma vie alle 4 kilotavua muistia kovalevyltäsi. Tämä on vähemmän kuin tämä kirjoittamani teksti tallennettuna .docx Word-tiedostoksi.) ja Kirjoitettu 2016 ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/other/2020-05-10-demo/"
      },{
        "title": "Kantauralin klusiilien seuraajat nykykielissä",
        "excerpt":"Kirjoitelma J. Saarikiven luennoimalle luentokurssille “Uralilaisten kielten äänne- ja sanaoppi”, Helsingin Yliopisto, 2019. Rekonstruoidun kantauralin äännejärjestelmällä, sekä erityisesti sen klusiileilla onmonia yhteneväisyyksiä suomen kielen vastaavien järjestelmien kanssa, sekä myösmonia tärkeitä eroavaisuuksia. Pohdin tässä lyhyessä kirjoitelmassa nykykäsityksenmukaan rekonstruoidun kantauralin klusiilien seuraajia nykykielissä. Pidän pohdinnan varsinkin pienempien sukukielten kohdalla melko yleisenä. Tämä tarkoittaa, että puhun yleisesti mordvalaiskielistä “mordvana”, sekä saamelaiskielistä “saamena”,ja pohdin niiden äännejärjestelmiä tällä tasolla. Suomen kieltä pidetään useasti äänneasunsa puolesta monin tavoin melko van-hoillisena. Tämä pätee sekä perittyihin sanoihin, että vanhoihin lainasanoihin. Kummankin tapauksessa sanojen äänneasu suomen kielessä vakiinnuttuaan pysyy melko samanlaisena jopa pitkiäkin aikoja nykytieteen näkökulmasta. Käytetään jopailmaisua “kielellinen jääkaappi”. Aloitan pohdintani tämän, sekä oman suomenkielisyyteni vuoksi, suomen kielen konsonanteista. Suomen nykykieli sisältää soinnittomat klusiilit (/k/, /t/, /p/), sekä niiden soinnilliset vastineet (/g/, /d/, /b/); soinnittomat sibilantit (/s/, /S/); nasaalit (/m/,/n/, /ŋ/); puolivokaalit (/V/, /j/); likvidat (/l/, /r/); sekä frikatiivit (/f/, /h/).Näistä erityisesti soinnittomat klusiilit ja nasaalit ovat melko vanhakantaisia. Lainasanojen myötä rantautuneita ovat erityisesti soinnilliset klusiilit, sekä /f/ ja /S/.On esimerkkejä sanoista, joiden rekonstruoidut kantamuodot ovat joko täysin, tailähes, samanlaisia kantauralilaisissa muodoissaan kuin nykysuomessakin. Talläisiasanoja ovat esimerkiksi *elä- → elä- (elää, elämä), *kala → kala, sekä *pesä →pesä. Lainasanoista mainittakoon suomen sana rauta, jonka on esitetty olevan muinaisskandinaavinen laina sanasta *rauði. Kantaurali sisälsi nykykäsityksen mukaan soinnittomat klusiilit (/k/,/t/,/p/),sibilantit (/s/, /s j /, /S/), affrikaatat (/ts/, /ts j /), nasaalit (/m/,/n/,/n j /,/ŋ/), likvidat (/l/,/r/), spirantit (/ð/,/ð j /,/x/), sekä puolivokaalit (/j/,/w/). Huomattavimpana erona nykysuomeen on selvästi soinnillisten klusiilien puuttuminen. Onmyös monia äänteitä, joita ei nykysuomesta tai lähikielistäkään löydy. Näitä ovatesimerkiksi lateraalit /ð/ ja /x/, sekä monien konsonanttien liudentuneet variantit ( s’, c’, ð’). Kantauralin erkaantuessa tytärkielikseen syntyivät yleisimmän käsityksen mukaan samojedikielten sekä suomalais-ugrilaisten kielten haarat. Kantakielten rekonstruktiossa käytetään usein käsitystä aikakerroksittain länteenpäin liikkuessa tapahtuneista binäärisistä kielten erkaantumisista. Näistä erkaantumisia ovat kantaurali &gt; kantasamojedi, suomalais-ugrilainen kantakieli; suomalais-ugrilainen kantakieli &gt; ugrilaiset kielet, suomalais-permiläinen kantakieli; suomalais-permiläinen kantakieli &gt; permiläiskielet, suomalais-volgalainen kantakieli jne. Seuraan itse samaajaottelua ottamatta kantaa sen kielihistorialliseen faktuaalisuuteen, vaan käyttäensitä jaottelun ja luokittelun apuvälineenä. Uralilaisten kielten sukupuu aiheena onvuosien varrella ollut monenlaisen kiistan ja pohdinnan kohteena, ja kielille onkinesitetty useita eri luokittelutapoja. Samojedikielten nykyedustajia puhutaan Venäjällä Uralvuorten itäpuolella. Niihin kuuluvat esimerkiksi enetsin, nenetsin ja selkupin kielet. Kielet voidaan tarkemmin erotella pohjoissamojedikieliin (enetsi, nenetsi), sekä eteläsamojedikieliin(selkuppi). Pekka Sammallahti esittää kantauralin klusiileille seuraavia muunnoksia nykypäivän samojedikieliin tultaessa. Kantauralin ja kantasamojedin välillä klusiilienkatsotaan säilyttäneen äänneasunsa. Kantasamojedin ja nykykielten välillä taas tulkitaan tapahtuneen seuraavat muutokset pohjoissamojedin tapauksessa: *k &gt; *s j -ennen etuvokaaleja (*kitä → śitä); Nenetsissä *k- &gt; h-; Enetsissä *p- &gt; *f- (*pä →fe); Nganasaninsamojedissä *k- &gt; *s j - ennen *i ja *e -äänteitä (*kitä → śiti), sekä*t:n ja *p:n liudentuminen ennen etuvokaaleja. Eteläsamojedin (selkupin) tapauksessa: *k &gt; q- takavokaalien edellä, *k- &gt; š- etuvokaalien edellä (*kimå → šimi). Suurimmat äänne-erot kantauralin ja suomalais-ugrilaisen kantakielen välilläovat pitkien vokaalien synty, sekä muutaman uuden äänteen sisällytys. Klusiilienkatsotaan säilyneen tässä vaiheessa pääosin samanmuotoisina. Ugrilaiskieliin siirryttäessä tapahtui muun muassa joitakin vokaalien lyhentymisiä, sekä muutamiakonsonanttimuunnoksia. Klusiilit tosin säilyivät pitkälti tässäkin vaiheessa. Nykypäivän ugrilaisiin kieliin kuuluvat obinugrilaiset hantin ja mansin kielet, sekä Unkarissa puhuttava unkarin kieli. Obinugrilaisten kielten tapauksessa klusiilien katsotaan säilyneen pitkälti tähän päivään saakka. Mansin murteissa esiintyy *k &gt;x muunnos ennen etuvokaaleja, saman muunnoksen katsotaan tapahtuneen myöseräissä Hantin murteissa. Unkarin tapauksessa on tapahtunut paljon laajempia äänteenmuunnoksia verrattuna muihin uralilaisiin ja ugrilaisiinkin kieliin. Kielen puhuma-alue on myösmerkittävästi etäisempi lähimmistä kielisukulaisistaan kuin muiden kielten puhumaalueet. Kieli on ollut turkkilaiskielten vaikutuksen alla merkittävästi laajemmissamäärin kuin lähisukukielensä. Klusiilien tapauksessa on tapahtunut merkittäviä,mutta silti säännönmukaisia, muunnoksia. Sananalkuinen *p- muuntui säännöllisesti muotoon &gt; f-, sekä katosi sanansisäisissä yhteyksissä. Sananalkuinen *t säilyi.Vokaaliympäristöissä äänne muuttui muotoon &gt; z (*kotå → ház). Sananalkuinen*k- säilyi etuvokaalien edellä, ja koki muunnoksen &gt; h- ennen takavokaaleja (samaesimerkki); muissa yhteyksissä tapahtui muunnos &gt; v taikka äänteen kato (*ikä →év, *kelki → kell). Permiläiskielillä tarkoitetaan Pohjois-Venäjällä Uralin alueilla puhuttavia Komin, komipermjakin, sekä udmurtin kieliä. Klusiilit säilyivät suomalais-permiläiseenkantakieleen siirryttäessä. Kantapermiin syntyi uusia klusiileja, sekä muitakin konsonantteja, kuten soinnilliset sibilantit ja affrikaatat. Vanhojen klusiilien yhteydessä tapahtui vokaalinvälisten yksittäisklusiilien kato (*śata → *śu), sekä nasaalin jaklusiilin yhtymät denasalisoituivat (*lënti → *lud). Konsonanttijärjestelmän katsotaan säilyneen pitkälti kantapermistä nykykieliin. Permin jälkeen yleisin erottelu uralilaisten kielten välillä on suomalais-saamelaisten,sekä volgalaisten kielten välillä. Volgalaisiin kieliin kuuluvat marin sekä mordvankieliryhmät. Marin kiel(t)en konsonantit kokivat sibilanttien ja affrikaattojen tapauksissalaajaa yhteenlankeamista. Klusiilit kokivat myös laajoja muunnoksia. Vokaaliympäristöissä klusiilit pitkälti spirantistuivat (*kota → kuðo). Nasaaliyhtymissä olevat klusiilit soinnillistuivat (*ponti → pondo). Geminaatat lyhenivät, ja kokivatspirantistumisen (*šappama- → šowo). Mordvalaiskielten klusiilit kokivat laajaa soinnillistumista, klusiili muuntui soinnilliseksi säännönmukaisesti sonoranttiyhtymissä, sekä vokaalien välisessä ympäristöissä (*kota &gt; kudo, *lämpä → l’embe/l’ämbä). Äänteet *k ja *p muuttuivat puolivokaaleiksi vokaalien välissä, sekä joissain äänneyhtymissä (*s’epä → s’ive, s’ivä).Geminaatat kokivat lyhenemistä (*säppä → sepe, s’äpä). Seuraavaksi luokittelussa ovat suomalais-saamelaiset kielet, jotka jakautuvat itämerensuomalaisiin kieliin (mm. suomi, viro), sekä saamelaiskieliin (mm. pohjoissaame, inarinsaame). Saamelaiskielten tapauksessa tapahtui laajoja vokaalimuunnoksia, sekä myöskonsonanttimuunnoksia. Vanhoille klusiileille tapahtui lähinnä denasalisaatio yhtymissä (*kunta → goddi), sekä keskikonsonanttien vahveneminen (astevaihtelu).Kantasuomessa monet liudentuneet äänteet menettivät liudentuneisuutensa, sekä jotkin konsonantit vokaalistuivat. Klusiilit kuitenkin säilyivät laajalti. Merkittävä muutos tosin tapahtui äänneyhtymän *ti kanssa, joka läpikävi laajan *ti &gt; simuunnoksen (*läkti → läksi, *ykti → yksi; joiden tapauksessa esim. nykysuomentaivutusmuotoja vertailemalla on huomattavissa vanhakantainen äänneperimä). Kantauralin klusiileilla esiintyy siis laaja kirjo seuraajia nykykielissä, muttaeräissä tapauksissa vanhat klusiilit ovat vieläkin havaittavissa, joko joissain erittäin hyvin säilyneissä vanhoissa sanoissa, tai sitten niiden taivutusmuodoissa. Kielen kehittyessä ovat erinäiset äänteenmuunnokset tavallisia, ja jopa vääjämättömiä.Tavallisesti muunnokset kuitenkin säilyttävät osan alkuperäisen äänteen luonteesta.Läpikäytyjen klusiilien seuraajat ovat säännöllisesti sijoittuneet ääntämisalueidensa kannalta samalle alueelle kuin edeltäjänsäkin (p ja f, t ja s). Monet muunnoksetmyös edustavat yleisiä, maailman muissakin kieliryhmissä usein tavattavia, muunnoksia (soinnillistuminen vokaaliympäristöissä, spirantistuminen, sekä äänteellinenreduktio). Viitteet [1] Saarikivi, Janne; Uralilaisten kielten äänne- ja sanaoppi; luentokurssi ja kalvot,syksy 2019 [2] Sammallahti, Pekka; Historical phonology of the uralic languages, 1988 [3] Ison suomen kieliopin verkkoversio ( http://scripta.kotus.fi/visk/ ) [4] Kallio, Petri; Kantasuomen Konsonanttihistoriaa; Suomalais-Ugrilaisen SeuranToimituksia 253, 2007 [5] Kallio, Petri; Suomen kantakielten absoluuttista kronologiaa; Virittäjä 1/2006 ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/other/2021-07-01-klusiilit/"
      },{
        "title": "Working 100% remote and international vs. working in-office locally",
        "excerpt":"I was always a fan of hybrid remote work, even when working locally. Around the time Covid hit, I made the jump to full remote. Here are some of my opinionated thoughts based on my experience on remote vs. local work. Background I’ve worked in software for some time now. For the first few years that I was working at local companies in my country (Finland), I mostly worked in-office with occasional remote days or weeks. The culture at these companies was according, they publicized and promoted their openness to remote and hybrid work, but in practice almost everyone worked locally with some occasional remote days. Nothing wrong with that, of course. At one point in my career, I made the jump to 100% remote work in an international fully remote company, and never looked back. Below you’ll find my thoughts on the pros and cons of these two working styles based on my experiences. While I myself prefer remote working, I don’t want to say that it is objectively better, and only wish to provide my own subjective data on the matter. Everyone should make their own decisions on what style of work suits them best, and I do mean that. Don’t just accept one style or culture without thinking about it for yourself. Local work The old standard, obviously. When starting a company or a local branch, it is natural to get started with people you actually know in real life. Maybe you worked together, studied together, or met through another local channel. Recruitment can be easier when you have local resources like job boards. You can meet candidates and current colleagues in person. It is easy to stay on track of what everyone is doing, because they’re actually sitting there. Working locally in software roles has many benefits for an employee. When you run into an issue, you can just turn around and ask somebody. You can form work friendships easier because you can just go for a coffee break together with someone, or chat while working. Everyone has something in common, because you live within a local area. “You live where? Oh cool, I used to live there too, but we just moved there-and-there!” “Which bus are you taking?” “I like your car, also here’s my opinion on car brands.” This sort of stuff can help form connections with coworkers, even those working on very different areas than you or your team. There does not need to be balancing between work life and personal time, at least if you don’t agree to it yourself. When you clock out for the day, you’re done. No need to think about work anymore, this is me time. Similarly, if there’s something annoying you in your personal life (maybe your toaster broke or you ran out of coffee in the morning), you can switch it off for the day when you step into the office. Leave it for later, I’m working now. At the same time, there are some aspects that may cause issues. A lot of work in software is mental work. Sometimes you get the perfect work-related idea during non-work hours. Are you sure you’re going to remember it the next day when you’re working again? Maybe you’ve been battling with a particular bug fix, or finally solved that architectural problem causing you network issues.  Maybe you just found the new angle that your project has needed. Maybe you just have your best ideas during the evening or night hours. Flexible working hours and the chance to take your work machine home does certainly help here. Depending on your location, commute can also be an issue. Even if you love your work, office, working culture, how long are you willing to spend every single weekday just traveling? What if there’s a traffic jam? Natural catastrophe? Worldwide pandemic and lockdown? Remote Remote-first is a thing that some companies have been doing for what seems like forever, and also a completely new thing for many other companies within our “new normal”. At least for certain companies, and for certain types of workers, there’s many benefits to it. Assuming your home life is in order, working from home allows you to build your own home office work environment exactly the way you want. Coffee or tea? Which kind of coffee is best? Any other kind of little office drama simply does not exist here. If you work better by yourself, without your coworkers or managers being able to tap your shoulder at any moment to disrupt your flow, you can just mute your messages or leave answering them for later after you’re done with your current task. Especially in software, there’s many of us who prefer text-based communication over physical chats for most of the daily work communication. Working in-office, I often found myself sending Slack messages even to colleagues who were sitting within meters from me. Textual communication also provides traceability. Did you have a great coffee time chat with a coworker about a work matter, only to forget the details later? A text chat provides a full 100% accurate history of who said what, when. Forming those vital work connections with your coworkers takes new forms in a remote environment, though. Without seeing your colleagues in person day after day, how will you get to know them, both as people and by their working style? I’ve found it pays off to be proactive and have those bonding discussions with your teammates and other colleagues when it feels like a good time for it. It also pays off to take the effort to have your camera on during work-related calls - this makes you more approachable as a teammate, and also forces you to put at least the minimum amount of effort into your working setting and appearance during work. Perceptions do matter, and it is better to show yourself at your best. While the common meme about remote work implies lack of pants with a wine glass next to you on the table, this is rarely actually beneficial - and never so during work calls. This leads to one important conclusion: Company culture is highly amplified in importance in  any hybrid or remote setting. Monkey see, monkey do. Discipline matters. Don’t take hours-long breaks that you don’t fill in later during the day. Don’t scroll cat pictures and reddit posts all day. Treat your work at least as professionally as you would sitting in an office. Thriving in a remote role (be it 100% or hybrid) does certainly require some effort, and maybe also experience. It can be easy to slip into bad habits that kill your productivity, and setting the right boundaries between work and personal life can be tricky as well. But if you are able to put down those boundaries, and set yourself the right working style, remote work can be absolutely amazing. For myself, I would say my remote productivity would never be matched if I was still working mainly locally. Final thoughts The takeaway opinion that I wish to share here is that remote-first is definitely worth considering for those who are maybe used to a local working style. In-office is still the standard in many places, and for many people, it is the only style of working they know. Full remote or even hybrid working may not be the best for everyone, but as it is growing in popularity, everyone should definitely take the time to consider their own personal working style and work-related values so as to make their own decisions and unlock their own potential. ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/other/2023-03-24-remoteorlocal/"
      },{
        "title": "Reflections on Community Management and DevRel",
        "excerpt":"Having now worked as both a Dev Advocate and a Community Manager in software, I wanted to put together some ramblings on what makes them similar and separate, as well as why they are fields worth considering. Overview At least within software, Community Management and Developer Relations can be seen as basically two sides of the same coin. Community Managers in software communities have to be at least somewhat technical to be able to justifiedly represent their community, and Dev Advocates will often be responsible for “community management” work such as managing the social platforms for their dev community. Community Management Overview A Community Manager manages a community. This may involve creating a platform for people to come together to build that initial community, or it can be maintaining and supporting and existing community, and it can also mean growing that community. A CM may work in software with a technical community, but their expertise can be useful almost anywhere else as well. I’m a code dude so everything here is through a software-focused lense. Everything is based on my own thoughts and opinions acquired through my experience, so don’t take anything as gospel. Usual tasks At a high level, the daily work as a CM should be aligned to a numbers game. For any community team or a community professional within a team, there are (or at least should be) agreed-upon metrics to track the work. This can be absolute member numbers, engagement metrics, discussion activity, or anything else that represents the community at hand, and the required growth, support, maintenance, engagement, etcetera. On the hands-on level, this can translate to almost anything, and that’s one of the fun parts of community work. A Community leader can be an exemplary member of the community, start discussions and ready to jump in and help anyone in need. Another might work more behind-the-scenes and focus on implementing Community programs, such as rewarding particularly loyal and active members by designating them a special category of their own. Think contributor programs, for example. Building a natural hierarchy within the community is a common and highly effective pattern in community work in general. Organizing events is another great way of building engagement and/or outreach. Events can be regular or one-offs, and should be treated as serious projects to maximise their impact. They can be light-weight, such as a weekly chat or informal game time, or they can be bigger and require more preparation, such as talks, conferences, physical events with a venue. . . Other Community programs could include onboarding processes for new community members, or almost anything else that helps with the goals for that community. Another aspect of CM work is the internal part. Community people must make sure their community work is aligned with the overall direction of the company, and also work to make sure that the other parties within their company work together with community goals. This goes back to the numbers game: what is the value that an engaged community provides to the business? This is going to be very different between different businesses and communities. Operating a support community for a big piece of software, and managing an open-source community for a non-profit are going to rely on different metrics to measure their success.  Additionally, it is clearly necessary to stay on top of what is being built / sold / planned within the business in order to be able to represent a trustworthy source of truth to the community itself. Thus, in the day-to-day, a community manager’s work can include hands-on contact with the community, jumping in meetings with other internal teams, managing projects, and working at a strategy level. One thing’s for sure, and that’s the fact that you will never have time to get bored within such a line of work. Developer Relations / Advocacy I use terms such as DevRel person and Developer Advocate interchangeably here. YMMV. Overview The fun thing here is, most or all of the above discussion about Community Management applies here as well. The main difference is that a Developer Advocate must be at least somewhat technical by background, and that they operate a community of coders. In general, a DevRel person focuses more of their time in the day-to-day towards technical work such as programming POC projects and writing tutorials for coders. Content creation is more important here, while events and community programs (and metrics to track them) still remain important as well. Usual tasks A Developer Advocate should be the “first line of defense” of the tech they represent, and as such be ready to jump in and help community members whenever any issues or questions arise. They must keep track of activity within  the community platforms in place, and make sure information flows correctly and within a timely manner. They also uphold the image and brand of that tech within the community. When nothing is on fire, content creation is a constant. Maybe it’s working on web page contents, maybe it’s building example apps, maybe it’s writing tutorials or other blog posts, but something is almost always on the way. Depending on the role, person and business, a Dev Advocate can also be embedded within the technical programmer teams within the company. At the very least, they must stay on top of things that are happening, just as a CM would above. Additionally, they can also work on actual Software Development within the business for a portion of their work time. Putting all of this together, a DevRel person is basically someone who represents the archetypical developer within a particular tech, as well as the main communication piece between the devs and the business. When other developers raise questions or issues, they can always turn to the Advocate, who is right there ready to jump in with any  information and assistance. When the business wants to know how developers feel about the tech, the Advocate knows exactly the community’s opinion(s). When new stuff comes in or old stuff is gone, the Advocate let’s everyone know about it, and proceeds to write the first new pieces of code while documenting their journey for others to learn and follow along. Career Paths Almost anyone can become a community professional. Almost any dev with some people skills can become a DevRel person. There is no one single degree, certification or years-of-experience  minimum requirement.  Not everyone, however, is suitable for this line of work. Also, while it is possible to make the move into Community and DevRel space from various background, there is also high potential for growth and certainly work to be done, no matter your experience level. Certifications for community professionals are currently emerging, check out CMX in the links below for that. I’m also writing a few other posts on making the break towards Community work, so keep an eye on this blog for those too. Some of the completely unavoidable skills within this line of work are:   The ability to form and maintain  connections with all types of people  Excellent communication skills  Balancing between the human and the business  Empathy and willingness to help others  Knowing when to stop doing something that doesn’t work and pivot to something else  Skill and passion for code, as any sort of DevRel personIf these sound like you, Community work might be just right for you. You may have background in project management, you may be fresh out of school as a coder, you may be a senior developer who’s seen it all, or maybe you come from a marketing background. All are welcome here, as we’re all inclusive community builders here! ( Full disclosure: The phrase “we’re all inclusive community builders here!” I unashamedly stole from the CMX Summit 2022 event - hope to see you at the next one! ) Further resources   CMX  Devrel Collective  Developer Advocacy Handbook","categories": [],
        "tags": [],
        "url": "http://localhost:4000/other/2023-03-27-communitydevrel/"
      },]
